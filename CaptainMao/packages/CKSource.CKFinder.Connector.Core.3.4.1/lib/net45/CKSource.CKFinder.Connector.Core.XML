<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CKSource.CKFinder.Connector.Core</name>
    </assembly>
    <members>
        <member name="T:CKSource.CKFinder.Connector.Core.Acl.AclRepository">
            <summary>
            Provides default Access Control List.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.AclRepository.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRepository"/>.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Acl.AclRepository.Rules">
            <summary>
            A collection of all <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> instances in the repository.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.AclRepository.AddRule(CKSource.CKFinder.Connector.Core.Acl.AclRule)">
            <summary>
            Adds <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> to the repository.
            </summary>
            <param name="rule">An instance of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> to add.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.AclRepository.RemoveRule(CKSource.CKFinder.Connector.Core.Acl.AclRule)">
            <summary>
            Removes <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> from the repository.
            </summary>
            <param name="rule">An instance of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> to remove.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.AclRepository.GetPermission(CKSource.CKFinder.Connector.Core.Resources.ResourceType,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
            Returns permission mask for given ResourceType, path and user roles.
            </summary>
            <param name="resourceType">An instance of <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> for which calculate permission.</param>
            <param name="path">An absolute path to the folder for which calculate permission.</param>
            <param name="roles">A collection of user roles.</param>
            <returns>A mask of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.Permission"/>.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Acl.AclRule">
            <summary>
            Defines an Access Control List rule.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.AclRule.#ctor(CKSource.CKFinder.Connector.Core.Acl.StringMatcher,CKSource.CKFinder.Connector.Core.Acl.StringMatcher,CKSource.CKFinder.Connector.Core.Acl.StringMatcher,System.Collections.Generic.IDictionary{CKSource.CKFinder.Connector.Core.Acl.Permission,CKSource.CKFinder.Connector.Core.Acl.PermissionType})">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/>.
            </summary>
            <param name="resourceNameMatcher">A <see cref="T:CKSource.CKFinder.Connector.Core.Acl.StringMatcher"/> for a ResourceType name.</param>
            <param name="pathMatcher">A <see cref="T:CKSource.CKFinder.Connector.Core.Acl.StringMatcher"/> for a folder path.</param>
            <param name="roleMatcher">A <see cref="T:CKSource.CKFinder.Connector.Core.Acl.StringMatcher"/> for a role name.</param>
            <param name="permissions">A dictionary of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.Permission"/> and <see cref="T:CKSource.CKFinder.Connector.Core.Acl.PermissionType"/>.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Acl.AclRule.ResourceNameMatcher">
            <summary>
            Gets the ResourceType name matcher.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Acl.AclRule.PathMatcher">
            <summary>
            Gets the folder path matcher.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Acl.AclRule.RoleMatcher">
            <summary>
            Gets the role name matcher.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Acl.AclRule.Permissions">
            <summary>
            Gets the dictionary of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.Permission"/> and <see cref="T:CKSource.CKFinder.Connector.Core.Acl.PermissionType"/>.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Acl.MatcherComparisonResult">
            <summary>
            Possible comparison results.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Acl.MatcherComparisonResult.SubSet">
            <summary>
            A subset
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Acl.MatcherComparisonResult.SuperSet">
            <summary>
            A superset.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Acl.MatcherComparisonResult.Equal">
            <summary>
            An equality.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Acl.MatcherComparisonResult.Distinct">
            <summary>
            A distinction.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Acl.IAclRepository">
            <summary>
            Provides Access Control List.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Acl.IAclRepository.Rules">
            <summary>
            A collection of all <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> instances in the repository.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.IAclRepository.AddRule(CKSource.CKFinder.Connector.Core.Acl.AclRule)">
            <summary>
            Adds <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> to the repository.
            </summary>
            <param name="rule">An instance of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> to add.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.IAclRepository.RemoveRule(CKSource.CKFinder.Connector.Core.Acl.AclRule)">
            <summary>
            Removes <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> from the repository.
            </summary>
            <param name="rule">An instance of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> to remove.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.IAclRepository.GetPermission(CKSource.CKFinder.Connector.Core.Resources.ResourceType,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
            Returns permission mask for given ResourceType, path and user roles.
            </summary>
            <param name="resourceType">An instance of <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> for which calculate permission.</param>
            <param name="path">An absolute path to the folder for which calculate permission.</param>
            <param name="roles">A collection of user roles.</param>
            <returns>A mask of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.Permission"/>.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Acl.IRequestAcl">
            <summary>
            Provides high level Access Control List for a request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.IRequestAcl.RequirePermission(CKSource.CKFinder.Connector.Core.Nodes.IFolder,CKSource.CKFinder.Connector.Core.Acl.Permission)">
            <summary>
            Throws <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.PermissionRequiredException"/> if permission is missing.
            </summary>
            <param name="folder">A folder to check.</param>
            <param name="permission">A required permission mask.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.IRequestAcl.RequirePermission(CKSource.CKFinder.Connector.Core.Nodes.IFile,CKSource.CKFinder.Connector.Core.Acl.Permission)">
            <summary>
            Throws <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.PermissionRequiredException"/> if permission is missing.
            </summary>
            <param name="file">A file for which folder will be checked.</param>
            <param name="permission">A required permission mask.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.IRequestAcl.HasPermission(CKSource.CKFinder.Connector.Core.Nodes.IFolder,CKSource.CKFinder.Connector.Core.Acl.Permission)">
            <summary>
            Checks if permission if available.
            </summary>
            <param name="folder">A folder to check.</param>
            <param name="permission">A required permission mask.</param>
            <returns>True if permission is available, false otherwise.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.IRequestAcl.HasPermission(CKSource.CKFinder.Connector.Core.Nodes.IFile,CKSource.CKFinder.Connector.Core.Acl.Permission)">
            <summary>
            Checks if permission if available.
            </summary>
            <param name="file">A file for which folder will be checked.</param>
            <param name="permission">A required permission mask.</param>
            <returns>True if permission is available, false otherwise.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Acl.Permission">
            <summary>
            Available permissions
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Acl.PermissionType">
            <summary>
            Describes permission types
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Acl.PermissionType.Allow">
            <summary>
            Allow permission
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Acl.PermissionType.Deny">
            <summary>
            Deny permission
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Acl.PermissionType.Inherit">
            <summary>
            Inherit permission from parent
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Acl.StringMatcher">
            <summary>
            Defines mask based string matcher.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.StringMatcher.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.StringMatcher"/>.
            </summary>
            <remarks>
            The template may contain:
            * <c>*</c> character to match zero or more characters
            * <c>?</c> character to exactly one character
            </remarks>
            <param name="template">A template for matching</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Acl.StringMatcher.Template">
            <summary>
            Gets the template string.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.StringMatcher.IsMatch(System.String)">
            <summary>
            Matches text against this matcher.
            </summary>
            <param name="text">A text to match.</param>
            <returns>True if match is successful.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.StringMatcher.Compare(CKSource.CKFinder.Connector.Core.Acl.StringMatcher)">
            <summary>
            Determines whether this <see cref="T:CKSource.CKFinder.Connector.Core.Acl.StringMatcher"/> is a sub-set, a super-set, is equal to or is distinct from the other <see cref="T:CKSource.CKFinder.Connector.Core.Acl.StringMatcher"/>.
            </summary>
            <param name="other">A <see cref="T:CKSource.CKFinder.Connector.Core.Acl.StringMatcher"/> to compare.</param>
            <returns>A <see cref="T:CKSource.CKFinder.Connector.Core.Acl.MatcherComparisonResult"/> value with comparison result.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Acl.StringMatcher.Compare(CKSource.CKFinder.Connector.Core.Acl.StringMatcher,CKSource.CKFinder.Connector.Core.Acl.StringMatcher)">
            <summary>
            Determines whether first <see cref="T:CKSource.CKFinder.Connector.Core.Acl.StringMatcher"/> is a sub-set, a super-set, is equal to or is distinct from the second <see cref="T:CKSource.CKFinder.Connector.Core.Acl.StringMatcher"/>.
            </summary>
            <param name="lhs">A first <see cref="T:CKSource.CKFinder.Connector.Core.Acl.StringMatcher"/> to compare.</param>
            <param name="rhs">A second <see cref="T:CKSource.CKFinder.Connector.Core.Acl.StringMatcher"/> to compare.</param>
            <returns>A <see cref="T:CKSource.CKFinder.Connector.Core.Acl.MatcherComparisonResult"/> value with comparison result.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Authentication.IUser">
            <summary>
            Defines CKFinder user.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Authentication.IUser.IsAuthenticated">
            <summary>
            Gets whether this user is authenticated and may use the application.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Authentication.IUser.Roles">
            <summary>
            Gets this user's roles.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Authentication.User">
            <summary>
            Default implementation of <see cref="T:CKSource.CKFinder.Connector.Core.Authentication.IUser"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Authentication.User.#ctor(System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Authentication.User"/>.
            </summary>
            <param name="isAuthenticated">Whether this user is authenticated.</param>
            <param name="roles">A roles enumeration.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Authentication.User.IsAuthenticated">
            <summary>
            Gets whether this user is authenticated and may use the application.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Authentication.User.Roles">
            <summary>
            Gets this user's roles.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Authentication.IAuthenticator">
            <summary>
            Defines authentication.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Authentication.IAuthenticator.AuthenticateAsync(CKSource.CKFinder.Connector.Core.ICommandRequest,System.Threading.CancellationToken)">
            <summary>
            Asynchronously authenticates requests.
            </summary>
            <param name="commandRequest">A request to authenticate.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The user instance.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration">
            <summary>
            Defines connector's configuration.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.AddBackend(System.String,CKSource.FileSystem.IFileSystem)">
            <summary>
            Adds a backend to the connector.
            </summary>
            <seealso cref="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.AddProxyBackend(System.String,CKSource.FileSystem.IFileSystem)"/>
            <seealso cref="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.RemoveBackend(System.String)"/>
            <param name="name">A name of the backend. Must be non-empty and unique.</param>
            <param name="fileSystem">An instance of the file system used by this backend.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.AddProxyBackend(System.String,CKSource.FileSystem.IFileSystem)">
            <summary>
            Adds a backend to the connector.
            </summary>
            <seealso cref="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.AddBackend(System.String,CKSource.FileSystem.IFileSystem)"/>
            <seealso cref="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.RemoveBackend(System.String)"/>
            <remarks>
            Proxy backends use connector's <c>Proxy</c> command to access it's resources.
            
            This is a powerful option that allows to serve any files stored in CKFinder.
            Creating links to files for your web page may be difficult, or even impossible in some cases (for example when files are stored on a private FTP server, or files are not in the web server root folder).
            This method tells CKFinder to create links to files using the <c>Proxy</c> command.
            
            Serving files this way has the following advantages:
            * The files do not need to be publicly accessible with direct links. You do not have to change your storage configuration to make files accessible for anonymous users.
            * Better control over access to files. You can use CKFinder ACL options to define more strict access rights to files (see the accessControl configuration option).
            * Easier control over client-side caching rules. Using the cache configuration option you can define for how long the file served by the Proxy command should be cached in the browser.
            
            The disadvantage of this approach is that all links to files will be dependent on the CKFinder connector, so if you decide to remove CKFinder one day, the links will simply stop working.
            </remarks>
            <param name="name">A name of the backend. Must be non-empty and unique.</param>
            <param name="fileSystem">An instance of the file system used by this backend.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.RemoveBackend(System.String)">
            <summary>
            Removes a backend from the connector.
            </summary>
            <param name="backendName">A name of the backend.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.GetBackend(System.String)">
            <summary>
            Gets a backend with given name.
            </summary>
            <param name="backendName">A name of the backend.</param>
            <returns>An instance of the backend or null if no backend with given name was found.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.AddResourceType(System.String,System.Action{CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder})">
            <summary>
            Adds ResourceType to the connector.
            </summary>
            <param name="resourceTypeName">A name of the ResourceType. Must be non-empty and unique.</param>
            <param name="resourceBuilderAction">An action to build the ResourceType. See <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder"/>.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.RemoveResourceType(System.String)">
            <summary>
            Removes ResourceType from the connector.
            </summary>
            <param name="resourceTypeName">A name of the ResourceType.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.AddAclRule(CKSource.CKFinder.Connector.Core.Acl.AclRule)">
            <summary>
            Adds <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> to the connector.
            </summary>
            <param name="aclRule">An instance of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> to add.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.RemoveAclRule(CKSource.CKFinder.Connector.Core.Acl.AclRule)">
            <summary>
            Removes <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> from the connector.
            </summary>
            <param name="aclRule">An instance of <see cref="T:CKSource.CKFinder.Connector.Core.Acl.AclRule"/> to remove.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetThumbnailSizes(CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality[])">
            <summary>
            Sets allowed thumbnail sizes for the connector.
            </summary>
            <param name="allowedSizes">An array or list of allowed sizes.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetThumbnailBackend(System.String,System.String)">
            <summary>
            Defines which backend should be used for storing thumbnails.
            </summary>
            <remarks>
            Provided backend must be registered using <see cref="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.AddBackend(System.String,CKSource.FileSystem.IFileSystem)"/> or <see cref="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.AddProxyBackend(System.String,CKSource.FileSystem.IFileSystem)"/> method.
            </remarks>
            <param name="backendName">A name of the backend used for thumbnails.</param>
            <param name="thumbnailsPath">A path to thumbnails in the backend.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetImageResizeThreshold(System.Int32,System.Int32)">
            <summary>
            Defines the maximum difference in width and height between cached and requested resized image.
            </summary>
            <param name="pixels">The maximum difference in width and height in pixels between cached and requested image.</param>
            <param name="percent">The maximum difference in width and height in percent between cached and requested image.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetMaxImageSize(System.Drawing.Size)">
            <summary>
            Defines maximum image size for the connector.
            </summary>
            <param name="maxSize">A maximum allowed size.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetDefaultImageQuality(CKSource.CKFinder.Connector.Core.ImageQuality)">
            <summary>
            Defines default image quality of <c>JPEG</c> images for the connector. The default quality has value of 80.
            </summary>
            <remarks>
            This is used for resized images that don't define their own quality.
            </remarks>
            <param name="quality">A default quality.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetSizeDefinitions(CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition[])">
            <summary>
            Sets size definitions to the connector.
            </summary>
            <param name="sizeDefinitions">An array or list of size definitions.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetCheckSizeAfterScaling(System.Boolean)">
            <summary>
            Defines whether a file size will be checked after image resize during <c>Upload</c> command execution.
            </summary>
            <param name="enable">Whether a file size should be checked after image resize.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetMaxFileSize(System.Int64)">
            <summary>
            Defines the maximum file size that may be uploaded to the connector.
            </summary>
            <param name="maxFileSize">A maximum file size in bytes.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetOverwriteOnUpload(System.Boolean)">
            <summary>
            Defines whether <c>Upload</c> command will overwrite files.
            </summary>
            <param name="enable">Whether <c>Upload</c> command should overwrite files.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetDisallowUnsafeCharacters(System.Boolean)">
            <summary>
            Defines whether to disallow creating folders and uploading files whose names contain characters that are not safe on an IIS web server.
            </summary>
            <remarks>
            Increases the security on an IIS web server.
            </remarks>
            <param name="enable">Whether to disallow creating folders and uploading files with unsafe names.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetCheckDoubleExtension(System.Boolean)">
            <summary>
            Whether to allow for files with double file extension.
            </summary>
            <remarks>
            Due to security issues with Apache modules it is recommended to leave checkDoubleExtension enabled.
            </remarks>
            <param name="enable">Whether to allow for files with double file extension.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetSecureImageUploads(System.Boolean)">
            <summary>
            Defines whether to perform additional checks when uploading image files.
            </summary>
            <remarks>
            The check is performed against files with image file's extensions and will return error when given file is not a valid image.
            </remarks>
            <param name="enable">Whether to perform additional checks when uploading image files.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetKeyValueStoreProvider(CKSource.CKFinder.Connector.Core.KeyValueStores.IKeyValueStoreProvider)">
            <summary>
            Sets a <see cref="T:CKSource.CKFinder.Connector.Core.KeyValueStores.IKeyValueStoreProvider"/> for the connector.
            </summary>
            <param name="keyValueStoreProvider">An instance of <see cref="T:CKSource.CKFinder.Connector.Core.KeyValueStores.IKeyValueStoreProvider"/>.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration.SetProxyCacheSeconds(System.Int32)">
            <summary>
            Configures cache lifetime for <c>Proxy</c> command.
            </summary>
            <param name="seconds">An amount of seconds for cache header.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration"/>.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Builders.IConnectorFactory`1">
            <summary>
            Defines factory of connectors.
            </summary>
            <typeparam name="T">A type of the connector.</typeparam>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.IConnectorFactory`1.Create(Autofac.ContainerBuilder,System.Action{CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration},Autofac.IContainer@)">
            <summary>
            Creates new connector.
            </summary>
            <param name="containerBuilder">An <c>Autofac</c> container builder.</param>
            <param name="configurationAction">A configuration action invoked for each request.</param>
            <param name="container">A container built during creation of the connector.</param>
            <returns>A connector instance.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder">
            <summary>
            Builds an instance of <see cref="T:CKSource.CKFinder.Connector.Core.IConnector"/> using fluent interface.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder.SetLicense(System.String,System.String)">
            <summary>
            Adds license information to the connector.
            </summary>
            <param name="licenseName">A license name.</param>
            <param name="licenseKey">A license key.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder.SetRequestConfiguration(System.Action{CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Builders.ConnectorConfiguration})">
            <summary>
            Sets connector's configuration for each request.
            </summary>
            <param name="configurationAction">A configuration action.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder.AddCommand(System.String,System.Type)">
            <summary>
            Adds custom command to the connector.
            </summary>
            <param name="name">A name of the command to add.</param>
            <param name="commandType">A type of the command to add. All commands must that implement <see cref="T:CKSource.CKFinder.Connector.Core.Commands.ICommand"/> interface.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder.AddCommand``1(System.String)">
            <summary>
            Adds custom command to the connector.
            </summary>
            <param name="name">A name of the command to add.</param>
            <typeparam name="T">A type of the command to add. All commands must that implement <see cref="T:CKSource.CKFinder.Connector.Core.Commands.ICommand"/> interface.</typeparam>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder.SetAuthenticator(CKSource.CKFinder.Connector.Core.Authentication.IAuthenticator)">
            <summary>
            Defines an <see cref="T:CKSource.CKFinder.Connector.Core.Authentication.IAuthenticator"/> for the connector.
            </summary>
            <param name="authenticator">An instance of <see cref="T:CKSource.CKFinder.Connector.Core.Authentication.IAuthenticator"/>.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder.SetCsrfProtection(System.Boolean)">
            <summary>
            Defines whether enable <a href="https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29">CSRF</a> protection. The default CSRF protection mechanism is based on <a href="https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet#Double_Submit_Cookies">double submit cookies</a>.
            </summary>
            <param name="enable">A boolean whether to enable this option.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder.SetVerboseLogging(System.Boolean)">
            <summary>
            Defines whether enable verbose logging of exceptions.
            </summary>
            <param name="enable">A boolean whether to enable this option.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder.SetPluginsPath(System.String)">
            <summary>
            Defines path to folder with plugins.
            </summary>
            <param name="pluginsPath">A path to folder with plugins.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder.AddPlugin(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})">
            <summary>
            Adds a plugin.
            </summary>
            <param name="pluginName">The name of the plugin.</param>
            <param name="options">The options for the plugin.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder.AddPlugin(System.String)">
            <summary>
            Adds a plugin.
            </summary>
            <param name="pluginName">The name of the plugin.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ConnectorBuilder.Build``1(CKSource.CKFinder.Connector.Core.Builders.IConnectorFactory{``0})">
            <summary>
            Builds instance of the <see cref="T:CKSource.CKFinder.Connector.Core.IConnector"/>.
            </summary>
            <returns>Instance of <see cref="T:CKSource.CKFinder.Connector.Core.IConnector"/>.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder">
            <summary>
            Builds an instance of <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> using fluent interface.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder"/>.
            </summary>
            <param name="name">A name of the <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/>. Each <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> in a connector must have unique name.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder.SetAllowedExtensions(System.String[])">
            <summary>
            Adds allowed extensions to the <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/>.
            </summary>
            <remarks>
            Allowed and denied extensions cannot be mixed. If at least one allowed extension is provided, this method will clear all denied extensions.
            </remarks>
            <param name="extensions">An array or list of allowed extensions.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder.SetDeniedExtensions(System.String[])">
            <summary>
            Adds denied extensions to the <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/>.
            </summary>
            <remarks>
            Allowed and denied extensions cannot be mixed. If at least one denied extension is provided, this method will clear all allowed extensions.
            </remarks>
            <param name="extensions">An array or list of denied extensions.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder.SetMaxFileSize(System.Int64)">
            <summary>
            Definies maximum file size for this <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/>.
            </summary>
            <param name="maxSize">A maximum file size in bytes.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder.SetLabel(System.String)">
            <summary>
            Defines label for the <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/>.
            </summary>
            <remarks>
            If label is defined it will be used in a client application.
            </remarks>
            <param name="label">A label text.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder.SetLazyLoaded(System.Boolean)">
            <summary>
            Defines that the <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> is lazy loaded.
            </summary>
            <param name="enable">A boolean whether to enable this option.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder.SetBackend(System.String,System.String)">
            <summary>
            Defines backend for the <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/>.
            </summary>
            <param name="backendName">A name of the backend.</param>
            <param name="root">A base path in the backend.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder.SetAllowedHtmlExtensionMatchers(CKSource.CKFinder.Connector.Core.Acl.StringMatcher[])">
            <summary>
            Sets extension matchers for which files may contain <c>HTML</c> code.
            </summary>
            <param name="matchers">An array or list of matchers.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder.SetHideFilesMatchers(CKSource.CKFinder.Connector.Core.Acl.StringMatcher[])">
            <summary>
            Sets matchers of file names for which files will be hidden in the backend.
            </summary>
            <param name="matchers">An array or list of matchers.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder.SetHideFoldersMatchers(CKSource.CKFinder.Connector.Core.Acl.StringMatcher[])">
            <summary>
            Sets matchers of folder names for which folders will be hidden in the backend.
            </summary>
            <param name="matchers">An array or list of matchers.</param>
            <returns>Current instance of <see cref="T:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Builders.ResourceTypeBuilder.Build(CKSource.CKFinder.Connector.Core.ResizedImages.IThumbnailSettings,CKSource.CKFinder.Connector.Core.FileSystems.IBackendRepository,CKSource.CKFinder.Connector.Core.ResizedImages.IImageMetadataCacheRepository)">
            <summary>
            Builds instance of the <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/>.
            </summary>
            <param name="thumbnailSettings">An instance of thumbnail settings.</param>
            <param name="backendRepository">An instance of backend repository.</param>
            <param name="imageMetadataCacheRepository">An instance of image metadata cache repository.</param>
            <returns>Instance of <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/>.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.CacheOptions">
            <summary>
            Cache options with expiration and e-tag.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.CacheOptions.#ctor(System.Int32,System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.CacheOptions"/>.
            </summary>
            <param name="expireSeconds">An amount of seconds before cached data are expired.</param>
            <param name="eTag">An entity tag for cache validation.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CacheOptions.ExpireSeconds">
            <summary>
            Gets the amount of seconds before cached data are expired.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CacheOptions.ETag">
            <summary>
            Gets the entity tag for cache validation.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CacheOptions.Enabled">
            <summary>
            Gets whether the cache is enabled.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.CacheOptions.None">
            <summary>
            Defines the disabled cache.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.CommandResponse">
            <summary>
            An abstract command response.
            </summary>
            <remarks>
            Valid implementations are:
            - JsonCommandResponse
            - NotModifiedCommandResponse
            - StreamCommandResponse
            - StringCommandResponse
            </remarks>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CommandResponse.MimeType">
            <summary>
            Gets the content type.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CommandResponse.HttpStatusCode">
            <summary>
            Gets the http status code of the response.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CommandResponse.CacheOptions">
            <summary>
            Gets the cache options.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.CreateFolderCommand">
            <summary>
            Creates a child folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CreateFolderCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.CreateFolderCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.DeleteFilesCommand">
            <summary>
            Deletes given files.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.DeleteFilesCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.DeleteFilesCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.DeleteFolderCommand">
            <summary>
            Deletes a given folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.DeleteFolderCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.DeleteFolderCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.DownloadFileCommand">
            <summary>
            Downloads a file from the server.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.DownloadFileCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.DownloadFileCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.ContentDto">
            <summary>
            Defines data transfer object for base64 encoded content.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ContentDto.Content">
            <summary>
            Gets or sets the base64 encoded content.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileErrorDto">
            <summary>
            Defines data transfer object for a file error.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileErrorDto.Number">
            <summary>
            The error code.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileErrorDto.Name">
            <summary>
            The file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileErrorDto.Type">
            <summary>
            The ResourceType name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileErrorDto.Folder">
            <summary>
            The path to file's folder.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageActionDto">
            <summary>
            Defines base data transfer object for an image action.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageActionDto.Action">
            <summary>
            An action type.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageActionsDto">
            <summary>
            Defines data transfer object for a collection of image actions.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageActionsDto.Actions">
            <summary>
            Actions array.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageCropInfoDto">
            <summary>
            Defines data transfer object for an image crop action.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageCropInfoDto.X">
            <summary>
            The x coordinate of cropped region.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageCropInfoDto.Y">
            <summary>
            The y coordinate of cropped region.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageCropInfoDto.Width">
            <summary>
            The width of cropped region.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageCropInfoDto.Height">
            <summary>
            The height of cropped region.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageDto">
            <summary>
            Defines data transfer object for an image content.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageDto.Content">
            <summary>
            Base64 encoded content.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageOperation">
            <summary>
            Possible image action types.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageOperation.Crop">
            <summary>
            The crop operation.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageOperation.Rotate">
            <summary>
            The rotate operation.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageOperation.Resize">
            <summary>
            The resize operation.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageResizeInfoDto">
            <summary>
            Defines data transfer object for an image resize action.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageResizeInfoDto.Width">
            <summary>
            The width of requested size.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageResizeInfoDto.Height">
            <summary>
            The height of requested size.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageRotateInfoDto">
            <summary>
            Defines data transfer object for an image rotate action.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageRotateInfoDto.Angle">
            <summary>
            The angle in degrees.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImageRotateInfoDto.BackgroundColor">
            <summary>
            The background color in hexadecimal 0xRRGGBB notation.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImagesSettingsDto">
            <summary>
            Defines data transfer object for images settings.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImagesSettingsDto.Max">
            <summary>
            The maximum image dimensions.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ImagesSettingsDto.Sizes">
            <summary>
            The map of known size names and dimensions.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileDto">
            <summary>
            Defines data transfer object for a file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileDto.Options">
            <summary>
            The options for file conflict during move or copy.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileDto.Name">
            <summary>
            The file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileDto.Type">
            <summary>
            The name of the ResourceType.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileDto.Folder">
            <summary>
            The path to file's folder.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileDto.ToString">
            <summary>
            Converts this <see cref="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileDto"/> class to a human-readable string.
            </summary>
            <returns>A string that is a combination of <see cref="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileDto.Options"/>, <see cref="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileDto.Name"/>, <see cref="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileDto.Type"/> and <see cref="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileDto.Folder"/> properties of this <see cref="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileDto"/> class.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode">
            <summary>
            Available error codes.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.None">
            <summary>
            No error occured.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.CustomError">
            <summary>
            A custom (user defined) error occured.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.InvalidCommand">
            <summary>
            Command doesn't exist or command name is invalid.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.TypeNotSpecified">
            <summary>
            ResourceType name wasn't provided in <c>type</c> parameter.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.InvalidType">
            <summary>
            The provided ResourceType name is invalid.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.InvalidConfig">
            <summary>
            The configuration is invalid.
            </summary>
            <remarks>
            This value is not used by .Net connector.
            </remarks>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.InvalidPlugin">
            <summary>
            The plugin is invalid.
            </summary>
            <remarks>
            This value is not used by .Net connector.
            </remarks>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.InvalidName">
            <summary>
            File or folder name is invalid.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.Unauthorized">
            <summary>
            Unauthorized to execute command on given ResourceType and path.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.AccessDenied">
            <summary>
            Access denied to the ResourceType and path.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.InvalidExtension">
            <summary>
            File extension is invalid.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.InvalidRequest">
            <summary>
            The request is invalid.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.Unknown">
            <summary>
            Unknown error occured.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.AlreadyExists">
            <summary>
            The file or folder already exists.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.FolderNotFound">
            <summary>
            A folder wasn't found.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.FileNotFound">
            <summary>
            A file wasn't found.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.UploadedFileRenamed">
            <summary>
            A file was renamed during upload.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.UploadedInvalid">
            <summary>
            Uploaded file is invalid.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.UploadedTooBig">
            <summary>
            Uploaded file is too big.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.UploadedCorrupt">
            <summary>
            Uploaded file is corrupted.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.UploadedWrongHtmlFile">
            <summary>
            File with <c>HTML</c> code has not allowed extension.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.UploadedInvalidNameRenamed">
            <summary>
            A file contains invalid name and has been renamed.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.MoveFailed">
            <summary>
            Move command failed.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.CopyFailed">
            <summary>
            Copy command failed.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.DeleteFailed">
            <summary>
            Delete command failed.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.ConnectorDisabled">
            <summary>
            A connector is disabled.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode.ThumbnailsDisabled">
            <summary>
            Thumbnails are disabled.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorDto">
            <summary>
            Defines data transfer object for errors.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorDto.Number">
            <summary>
            The error code.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorDto.Message">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorDto.Errors">
            <summary>
            Errors for files.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.FilesDto">
            <summary>
            Defines data transfer object for a collection of files.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FilesDto.Files">
            <summary>
            Files array.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.CurrentDirectoryDto">
            <summary>
            Defines data transfer object for CurrentDirectory.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.CurrentDirectoryDto.Path">
            <summary>
            A path to current folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.CurrentDirectoryDto.Acl">
            <summary>
            Permission mask for current user and folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.CurrentDirectoryDto.Url">
            <summary>
            Url to current folder.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileInfoDto">
            <summary>
            Defines data transfer object for a file info.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileInfoDto.Name">
            <summary>
            The file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileInfoDto.Date">
            <summary>
            The creation date and time.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileInfoDto.Size">
            <summary>
            The file size in kilo bytes.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileInfoDto.ToString">
            <summary>
            Converts this <see cref="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileInfoDto"/> class to a human-readable string.
            </summary>
            <returns>A string that is a combination of <see cref="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileInfoDto.Name"/>, <see cref="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileInfoDto.Date"/> and <see cref="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileInfoDto.Size"/> properties of this <see cref="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.FileInfoDto"/> class.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.FolderDto">
            <summary>
            Defines data transfer object for a folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FolderDto.Name">
            <summary>
            The folder name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FolderDto.HasChildren">
            <summary>
            Does this folder has child folders?
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FolderDto.Acl">
            <summary>
            Permission mask for current user and folder.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.Dtos.FolderDto.ToString">
            <summary>
            Converts this <see cref="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.FolderDto"/> class to a human-readable string.
            </summary>
            <returns>A string that is a combination of <see cref="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FolderDto.Name"/>, <see cref="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FolderDto.HasChildren"/> and <see cref="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.FolderDto.Acl"/> properties of this <see cref="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.FolderDto"/> class.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Dtos.ResourceDto">
            <summary>
            Defines data transfer object for images settings.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ResourceDto.Name">
            <summary>
            The ResourceType name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ResourceDto.AllowedExtensions">
            <summary>
            The comma separated allowed extensions.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ResourceDto.DeniedExtensions">
            <summary>
            The comma separated denied extensions.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ResourceDto.Hash">
            <summary>
            The ResourceType hash code.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ResourceDto.Label">
            <summary>
            The ResourceType label.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ResourceDto.Acl">
            <summary>
            Permission mask for ResourceType root folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ResourceDto.MaxSize">
            <summary>
            The maximum file size.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ResourceDto.HasChildren">
            <summary>
            Does the root folder has child folders?
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ResourceDto.LazyLoad">
            <summary>
            Is this ResourceType lazy loaded?
            </summary>
            <remarks>
            A null value is threated like false.
            </remarks>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ResourceDto.Url">
            <summary>
            Url to ResourceType root folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.Dtos.ResourceDto.UseProxyCommand">
            <summary>
            Does this ResourceType generate <c>Proxy</c> command urls?
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.FileUploadCommand">
            <summary>
            Uploads a file to a given folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.FileUploadCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.FileUploadCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.GetFilesCommand">
            <summary>
            Returns the list of files for a given folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetFilesCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.GetFilesCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.GetFileUrlCommand">
            <summary>
            Returns a direct URL to a file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetFileUrlCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.GetFileUrlCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.GetFoldersCommand">
            <summary>
            Returns the list of the child folders for a given folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetFoldersCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.GetFoldersCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.GetResizedImagesCommand">
            <summary>
            Returns a list of resized versions of the image file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetResizedImagesCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.GetResizedImagesCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ICommandRepository">
            <summary>
            A command repository.
            </summary>
            <remarks>
            It includes built-in commands that cannot be removed.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ICommandRepository.Add(System.String,System.Type)">
            <summary>
            Adds a command to the repository.
            </summary>
            <remarks>
            All commands must have unique names.
            </remarks>
            <param name="name">A name of command to add.</param>
            <param name="commandType">A type of command to add.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ICommandRepository.Add``1(System.String)">
            <summary>
            Adds a command to the repository.
            </summary>
            <remarks>
            All commands must have unique names.
            </remarks>
            <param name="name">A name of command to add.</param>
            <typeparam name="T">A type of command to add.</typeparam>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ICommandRepository.Remove(System.String)">
            <summary>
            Removes a command from the repository.
            </summary>
            <param name="name">A name of command to remove.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ICommandRepository.GetByName(System.String)">
            <summary>
            Gets a command by it's name.
            </summary>
            <param name="name">A name of command to get.</param>
            <returns>A command type or null if not found in the repository.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ImageEditCommand">
            <summary>
            Performs basic image modifications: crop, rotate, resize.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageEditCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ImageEditCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ImageEditResponse">
            <summary>
            Command response for ImageEditCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageEditResponse.Saved">
            <summary>
            Gets or sets whether the edition was successful.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageEditResponse.Date">
            <summary>
            Gets or sets the edition date.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ImageEditParameters">
            <summary>
            Command parameters for ImageEditCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ImageEditParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.ImageEditParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageEditParameters.FileName">
            <summary>
            Gets the old file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageEditParameters.NewFileName">
            <summary>
            Gets the new file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageEditParameters.ActionInfos">
            <summary>
            Gets the collection of actions to be done on the image.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ImageEditParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ImageInfoCommand">
            <summary>
            Returns information about the dimensions of the image file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageInfoCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ImageInfoCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ImagePreviewCommand">
            <summary>
            Creates a resized version of the image file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImagePreviewCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ImagePreviewCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ImageResizeCommand">
            <summary>
            Creates a resized version of the image file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageResizeCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ImageResizeCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.InitCommand">
            <summary>
            This is the first command issued by CKFinder. It returns the general settings of the connector and all configured resource types.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.InitCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.InitParameters">
            <summary>
            Command parameters for InitCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.InitParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.InitParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.InitParameters.Type">
            <summary>
            Gets the resource type to filter.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.InitParameters.Initialize">
            <summary>
            Initializes the init command parameters.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.JsonCommandResponse">
            <summary>
            The response with json.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.JsonCommandResponse.#ctor(System.Object)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.StringCommandResponse"/>.
            </summary>
            <param name="jsonData">An object to serialize and send as json.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.JsonCommandResponse.#ctor(System.Object,System.Net.HttpStatusCode)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.StringCommandResponse"/>.
            </summary>
            <param name="jsonData">An object to serialize and send as json.</param>
            <param name="httpStatusCode">An http status code of the response.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.JsonCommandResponse.#ctor(System.Object,System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.StringCommandResponse"/>.
            </summary>
            <param name="jsonData">An object to serialize and send as json.</param>
            <param name="mimeType">A content type.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.JsonCommandResponse.#ctor(System.Object,System.String,System.Net.HttpStatusCode)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.StringCommandResponse"/>.
            </summary>
            <param name="jsonData">An object to serialize and send as json.</param>
            <param name="mimeType">A content type.</param>
            <param name="httpStatusCode">An http status code of the response.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.JsonCommandResponse.Json">
            <summary>
            Gets the json to send.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.MoveFilesCommand">
            <summary>
            Moves files from selected folders.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.MoveFilesCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.MoveFilesCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.NotModifiedCommandResponse">
            <summary>
            The not modified (304) response.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.NotModifiedCommandResponse.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.NotModifiedCommandResponse"/>.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.OperationCommand">
            <summary>
            Tracks the progress of the operation in time-consuming connector commands.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.OperationCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.OperationResponse">
            <summary>
            Command response for OperationCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.OperationResponse.Total">
            <summary>
            Gets or sets the total number of items in the operation.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.OperationResponse.Current">
            <summary>
            Gets or sets the current amount of processed items in the operation.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ProxyCommand">
            <summary>
            Serves a file to the browser without forcing the download.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ProxyCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ProxyCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.Proxy.IProxyUrlGenerator">
            <summary>
            Translates urls to Proxy commands.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.Proxy.IProxyUrlGenerator.GetUrlAsync(CKSource.CKFinder.Connector.Core.Nodes.IFile,System.Threading.CancellationToken)">
            <summary>
            Asynchronously translates file url to Proxy command.
            </summary>
            <param name="file">A file, which url will be translated.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An url of Proxy command pointing to the file.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.Proxy.IProxyUrlGenerator.GetUrlAsync(CKSource.CKFinder.Connector.Core.Nodes.IFolder,System.Threading.CancellationToken)">
            <summary>
            Asynchronously translates folder url to Proxy command.
            </summary>
            <param name="folder">A folder,which url will be translated.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An url of Proxy command pointing to the folder.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.Proxy.IProxyUrlGenerator.GetUrlAsync(CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile,System.Threading.CancellationToken)">
            <summary>
            Asynchronously translates file url to Proxy command.
            </summary>
            <param name="file">A file, which url will be translated.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An url of Proxy command pointing to the file.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.QuickUploadParameters">
            <summary>
            Command parameters for QuickUploadCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.QuickUploadParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.QuickUploadParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.QuickUploadParameters.FuncNum">
            <summary>
            Gets the function number for CKEditor.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.QuickUploadParameters.ResponseType">
            <summary>
            Gets the response type.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.QuickUploadParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.QuickUploadResponse">
            <summary>
            Command response for QuickUploadCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.QuickUploadResponse.FileName">
            <summary>
            Gets or sets the uploaded file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.QuickUploadResponse.Url">
            <summary>
            Gets or sets the uploaded file url.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.QuickUploadResponse.Uploaded">
            <summary>
            Gets or sets whether the upload was successful.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.QuickUploadCommand">
            <summary>
            Uploads a file to the given folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.QuickUploadCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.QuickUploadCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.RenameFileCommand">
            <summary>
            Renames a file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.RenameFileCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.RenameFileCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.RenameFolderCommand">
            <summary>
            Renames a folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.RenameFolderCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.RenameFolderCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.SaveImageCommand">
            <summary>
            Saves a Base64-encoded PNG image to a file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.SaveImageCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.SaveImageCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse">
            <summary>
            The response with file stream.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse.#ctor(System.IO.Stream,System.Int64)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse"/>.
            </summary>
            <param name="stream">A stream with content to send.</param>
            <param name="length">A length of the stream.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse.#ctor(System.IO.Stream,System.Int64,System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse"/>.
            </summary>
            <param name="stream">A stream with content to send.</param>
            <param name="length">A length of the stream.</param>
            <param name="mimeType">A content type.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse.#ctor(System.IO.Stream,System.Int64,System.String,System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse"/>.
            </summary>
            <param name="stream">A stream with content to send.</param>
            <param name="length">A length of the stream.</param>
            <param name="mimeType">A content type.</param>
            <param name="fileName">A file name.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse.#ctor(System.IO.Stream,System.Int64,System.String,System.String,System.Boolean)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse"/>.
            </summary>
            <param name="stream">A stream with content to send.</param>
            <param name="length">A length of the stream.</param>
            <param name="mimeType">A content type.</param>
            <param name="fileName">A file name.</param>
            <param name="inline">Whether content disposition should be attachment or inline.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse.#ctor(System.IO.Stream,System.Int64,System.String,System.String,System.Boolean,CKSource.CKFinder.Connector.Core.Commands.CacheOptions)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse"/>.
            </summary>
            <param name="stream">A stream with content to send.</param>
            <param name="length">A length of the stream.</param>
            <param name="mimeType">A content type.</param>
            <param name="fileName">A file name.</param>
            <param name="inline">Whether content disposition should be attachment or inline.</param>
            <param name="cacheOptions">A cache options.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse.Stream">
            <summary>
            Gets the stream with content.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse.Length">
            <summary>
            The length of the content.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse.FileName">
            <summary>
            Gets the file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.StreamCommandResponse.Inline">
            <summary>
            Gets whether content disposition should be attachment or inline.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.StringCommandResponse">
            <summary>
            The response with text.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.StringCommandResponse.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.StringCommandResponse"/>.
            </summary>
            <param name="text">The text to send.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.StringCommandResponse.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.StringCommandResponse"/>.
            </summary>
            <param name="text">The text to send.</param>
            <param name="mimeType">The content type.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.StringCommandResponse.Text">
            <summary>
            Gets the text to send.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ThumbnailCommand">
            <summary>
            Downloads the thumbnail of an image file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ThumbnailCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ThumbnailCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ProxyParameters">
            <summary>
            Command parameters for ProxyCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ProxyParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.ProxyParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ProxyParameters.FileName">
            <summary>
            Gets the file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ProxyParameters.Thumbnail">
            <summary>
            Gets the thumbnail name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ProxyParameters.CacheSeconds">
            <summary>
            Gets requested cache duration in seconds.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ProxyParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.GetFileUrlResponse">
            <summary>
            Command response for GetFileUrlCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetFileUrlResponse.Urls">
            <summary>
            Gets or sets the dictionary of files and their urls.
            Used when multiple file urls were requested.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetFileUrlResponse.Url">
            <summary>
            Gets or sets the url of the file.
            Used when only one file url was requested.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ImageResizeParameters">
            <summary>
            Command parameters for ImageResizeCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ImageResizeParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.ImageResizeParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageResizeParameters.FileName">
            <summary>
            Gets the file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageResizeParameters.Size">
            <summary>
            Gets the requested size.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ImageResizeParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ImageResizeResponse">
            <summary>
            Command response for ImageResizeCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageResizeResponse.Url">
            <summary>
            Gets or sets the resized image url.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ResponseBase">
            <summary>
            The base class for command responses.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ResponseBase.Error">
            <summary>
            Gets or sets the error data.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ResponseBase.CurrentFolder">
            <summary>
            Gets or sets the current folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ResponseBase.ResourceType">
            <summary>
            Gets or sets the resource type.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.CopyFilesCommand">
            <summary>
            Copies files from selected folders.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CopyFilesCommand.Parameters">
            <summary>
            Gets the parameters parsed from the request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.CopyFilesCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.CopyFilesParameters">
            <summary>
            Command parameters for CopyFilesCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.CopyFilesParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.CopyFilesParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CopyFilesParameters.Context">
            <summary>
            Gets the collection of FileAndConflictOption.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.CopyFilesParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.CopyFilesResponse">
            <summary>
            Command response for CopyFilesCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CopyFilesResponse.Copied">
            <summary>
            Gets or sets how many files were copied.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.CreateFolderParameters">
            <summary>
            Command parameters for CreateFolderCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.CreateFolderParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.CreateFolderParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CreateFolderParameters.NewFolderName">
            <summary>
            Gets the new folder name.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.CreateFolderParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.CreateFolderResponse">
            <summary>
            Command response for CreateFolderCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CreateFolderResponse.Created">
            <summary>
            Gets or sets whether the folder were created.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CreateFolderResponse.NewFolder">
            <summary>
            Gets or sets the new name of the folder.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.DeleteFilesParameters">
            <summary>
            Command parameters for DeleteFilesCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.DeleteFilesParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.DeleteFilesParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.DeleteFilesParameters.Files">
            <summary>
            Gets the collection of files to delete.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.DeleteFilesParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.DeleteFilesResponse">
            <summary>
            Command response for DeleteFilesCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.DeleteFilesResponse.Deleted">
            <summary>
            Gets or sets how many files were deleted.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.DeleteFolderParameters">
            <summary>
            Command parameters for DeleteFolderCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.DeleteFolderParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.DeleteFolderParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.DeleteFolderResponse">
            <summary>
            Command response for DeleteFolderCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.DeleteFolderResponse.Deleted">
            <summary>
            Gets or sets whether the folder were deleted.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.DownloadFileParameters">
            <summary>
            Command parameters for DownloadFileCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.DownloadFileParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.DownloadFileParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.DownloadFileParameters.FileName">
            <summary>
            Gets the file name of the file to download.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.DownloadFileParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.FileUploadParameters">
            <summary>
            Command parameters for FileUploadCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.FileUploadParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.FileUploadParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.FileUploadParameters.Stream">
            <summary>
            Gets the stream with the file data.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.FileUploadParameters.FileName">
            <summary>
            Gets the file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.FileUploadParameters.AsPlainText">
            <summary>
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.FileUploadParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.FileUploadResponse">
            <summary>
            Command response for FileUploadCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.FileUploadResponse.FileName">
            <summary>
            Gets or sets the file name of the uploaded data.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.FileUploadResponse.Uploaded">
            <summary>
            Determines whether the upload was successful.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.GetFilesParameters">
            <summary>
            Command parameters for GetFilesCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.GetFilesParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.GetFilesParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.GetFileUrlParameters">
            <summary>
            Command parameters for GetFileUrlCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.GetFileUrlParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.GetFileUrlParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetFileUrlParameters.FileNames">
            <summary>
            Gets the list of files for which urls will be retrieved.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetFileUrlParameters.Thumbnail">
            <summary>
            Gets the thumbnail name if a thumbnail url have to be retrieved.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.GetFileUrlParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.GetFoldersParameters">
            <summary>
            Command parameters for GetFoldersCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.GetFoldersParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.GetFoldersParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.GetResizedImagesParameters">
            <summary>
            Command parameters for GetResizedImagesCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.GetResizedImagesParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.GetResizedImagesParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetResizedImagesParameters.FileName">
            <summary>
            Gets the file name.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.GetResizedImagesParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.GetResizedImagesResponse">
            <summary>
            Command response for GetResizedImagesCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetResizedImagesResponse.OriginalSize">
            <summary>
            Gets or sets the original image dimensions.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetResizedImagesResponse.Resized">
            <summary>
            Gets or sets the dictionary of resized file names and their resized data.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ImageInfoParameters">
            <summary>
            Command parameters for ImageInfoCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ImageInfoParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.ImageInfoParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageInfoParameters.FileName">
            <summary>
            Gets the file name.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ImageInfoParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ImageInfoResponse">
            <summary>
            Command response for ImageInfoCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageInfoResponse.Width">
            <summary>
            Gets or sets the image width.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageInfoResponse.Height">
            <summary>
            Gets or sets the image height.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImageInfoResponse.Size">
            <summary>
            Gets or sets the image file size.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ImagePreviewParameters">
            <summary>
            Command parameters for ImagePreviewCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ImagePreviewParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.ImagePreviewParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImagePreviewParameters.FileName">
            <summary>
            Gets the file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ImagePreviewParameters.Size">
            <summary>
            Gets the requested size.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ImagePreviewParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.JsonParamtersBase`1">
            <summary>
            The base class for JSON-based command parameters.
            </summary>
            <typeparam name="T">The type of data sent as JSON.</typeparam>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.JsonParamtersBase`1.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,System.Boolean)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.JsonParamtersBase`1"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="ensureResourceIsValid">Whether the command parameters should create default folder structure in the resource type during initialization.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.JsonParamtersBase`1.JsonData">
            <summary>
            Gets the object sent as JSON.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.JsonParamtersBase`1.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.MoveFilesParameters">
            <summary>
            Command parameters for MoveFilesCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.MoveFilesParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.MoveFilesParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.MoveFilesParameters.Context">
            <summary>
            Gets the collection of FileAndConflictOption.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.MoveFilesParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.MoveFilesResponse">
            <summary>
            Command response for MoveFilesCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.MoveFilesResponse.Moved">
            <summary>
            Gets or sets how many files were moved.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.CommandParameters">
            <summary>
            Base command parameters class.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.CommandParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,System.Boolean)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.CommandParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="ensureResourceIsValid">Whether the command parameters should create default folder structure in the resource type during initialization.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CommandParameters.ResourceTypeRepository">
            <summary>
            Gets the resource type repository.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CommandParameters.NodeFactory">
            <summary>
            Gets the node factory.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CommandParameters.Request">
            <summary>
            Gets the command request.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.CommandParameters.CurrentFolder">
            <summary>
            Gets the current folder instance.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.CommandParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.RenameFileParameters">
            <summary>
            Command parameters for RenameFileCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.RenameFileParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.RenameFileParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.RenameFileParameters.FileName">
            <summary>
            Gets the old file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.RenameFileParameters.NewFileName">
            <summary>
            Gets the new file name.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.RenameFileParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.RenameFileResponse">
            <summary>
            Command response for RenameFileCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.RenameFileResponse.Name">
            <summary>
            Gets or sets the old file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.RenameFileResponse.NewName">
            <summary>
            Gets or sets the new file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.RenameFileResponse.Renamed">
            <summary>
            Gets or sets whether the rename was successful.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.RenameFolderParameters">
            <summary>
            Command parameters for RenameFolderCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.RenameFolderParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.RenameFolderParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.RenameFolderParameters.NewFolderName">
            <summary>
            Gets the new folder name.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.RenameFolderParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.RenameFolderResponse">
            <summary>
            Command response for RenameFolderCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.RenameFolderResponse.NewName">
            <summary>
            Gets or sets the new name of the folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.RenameFolderResponse.NewPath">
            <summary>
            Gets or sets the new full path of the folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.RenameFolderResponse.Renamed">
            <summary>
            Gets or sets whether the rename was successful.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.SaveImageParameters">
            <summary>
            Command parameters for SaveImageCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.SaveImageParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.SaveImageParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.SaveImageParameters.FileName">
            <summary>
            Gets the file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.SaveImageParameters.ContentType">
            <summary>
            Gets the content type.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.SaveImageParameters.Stream">
            <summary>
            Gets the stream with file data.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.SaveImageParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.SaveImageResponse">
            <summary>
            Command response for SaveImageCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.SaveImageResponse.Saved">
            <summary>
            Gets or sets whether the save operation was successful.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.SaveImageResponse.Size">
            <summary>
            Gets or sets the file size.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.SaveImageResponse.Date">
            <summary>
            Gets or sets the save date.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ThumbnailParameters">
            <summary>
            Command parameters for ThumbnailCommand.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ThumbnailParameters.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository,CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.ThumbnailParameters"/>.
            </summary>
            <param name="request">An instance of command request.</param>
            <param name="resourceTypeRepository">A resource type repository.</param>
            <param name="nodeFactory">A node factory.</param>
            <param name="fileSettings">A file settings instance.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ThumbnailParameters.FileName">
            <summary>
            Gets the file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.ThumbnailParameters.Size">
            <summary>
            Gets the requested size.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ThumbnailParameters.InitializeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the command parameters.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.GetFilesResponse">
            <summary>
            Command response for GetFilesCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetFilesResponse.Files">
            <summary>
            Gets or sets the array of file information dtos.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.GetFoldersResponse">
            <summary>
            Command response for GetFoldersCommand.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Commands.GetFoldersResponse.Folders">
            <summary>
            Gets or sets the array of folder dtos.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ICommand">
            <summary>
            Command interface.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ICommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the command.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An action result returned to the client.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Commands.ICommandFactory">
            <summary>
            Defines command factory.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Commands.ICommandFactory.Create(System.String,CKSource.CKFinder.Connector.Core.ICommandRequest)">
            <summary>
            Creates command registered in a connector.
            </summary>
            <remarks>
            If command wasn't found will throw <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.CommandNotFoundException"/>.
            </remarks>
            <param name="commandName">A name of the command to create. Must be without <c>Command</c> suffix.</param>
            <param name="commandRequest">A command request.</param>
            <returns>A <see cref="T:CKSource.CKFinder.Connector.Core.Commands.ICommand"/> instance.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Operation.IOperationRepository">
            <summary>
            Provides operation status tracking.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Operation.IOperationRepository.StartOperationAsync(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Asynchronously starts tracking a new operation.
            </summary>
            <param name="operationId">An operation id. This should be a unique string.</param>
            <param name="operationAction">An action of the operation.</param>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Operation.IOperationRepository.AbortOperation(System.String)">
            <summary>
            Aborts operation with given id.
            </summary>
            <param name="operationId">An id of the operation to abort.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Operation.IOperationRepository.GetOperationProgress(System.String)">
            <summary>
            Retrieves the operation progress.
            </summary>
            <param name="operationId">An id of operation.</param>
            <returns>An instance of the <c>OperationProgress</c> for the given operation.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Operation.IOperationRepository.SetOperationProgress(System.String,System.Int32,System.Int32)">
            <summary>
            Sets operation progress.
            </summary>
            <param name="operationId">An operation id.</param>
            <param name="total">A maximum progress value.</param>
            <param name="current">A current progress value.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Operation.OperationProgress">
            <summary>
            Represents operation progress.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Operation.OperationProgress.Total">
            <summary>
            Gets or sets the maximum progress value.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Operation.OperationProgress.Current">
            <summary>
            Gets or sets the current progress value.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ComponentResolver">
            <summary>
            A default implementation of component resolver.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ComponentResolver.#ctor(Autofac.ILifetimeScope)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.ComponentResolver"/>.
            </summary>
            <param name="lifetimeScope">An Autofac lifetime scope.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ComponentResolver.Resolve``1">
            <summary>
            Resolves component of given type.
            </summary>
            <typeparam name="T">A type of the component.</typeparam>
            <returns>An instance of the component.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.MessageContext`1">
            <summary>
            An event message context.
            </summary>
            <typeparam name="T">A type of the event.</typeparam>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.MessageContext`1.#ctor(`0,CKSource.CKFinder.Connector.Core.IComponentResolver)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.MessageContext`1"/>.
            </summary>
            <param name="message">An event message.</param>
            <param name="componentResolver">A component resolver.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.MessageContext`1.Message">
            <summary>
            Gets the event message.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.MessageContext`1.ComponentResolver">
            <summary>
            Gets the component resolver.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.ImageEditEvent">
            <summary>
            Event published before image is modified in <c>ImageEdit</c> command.
            </summary>
            <remarks>
            The image will not be modified if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.ImageEditEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IImageFile,CKSource.CKFinder.Connector.Core.Nodes.IImageFile,ImageProcessor.ImageFactory)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.ImageEditEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="inputFile">An input file.</param>
            <param name="outputFile">An output file.</param>
            <param name="imageFactory">An image factory.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.ImageEditEvent.InputFile">
            <summary>
            The input file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.ImageEditEvent.OutputFile">
            <summary>
            The output file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.ImageEditEvent.ImageFactory">
            <summary>
            The image factory.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.SaveImageEvent">
            <summary>
            Event published before image is saved in the file system in <c>SaveImage</c> command.
            </summary>
            <remarks>
            The image will not be saved if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.SaveImageEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IFile)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.SaveImageEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="file">A file to save.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.SaveImageEvent.File">
            <summary>
            The file to save.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.AfterCommandEvent">
            <summary>
            Event published after command execution.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.AfterCommandEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Commands.ICommand,CKSource.CKFinder.Connector.Core.Commands.CommandResponse)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.AfterCommandEvent"/>.
            </summary>
            <param name="commandRequest">And instance of command request.</param>
            <param name="commandInstance">An instance of executed command.</param>
            <param name="commandResponse">An instance of command response.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.AfterCommandEvent.CommandInstance">
            <summary>
            Gets the instance of executed command.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.AfterCommandEvent.CommandResponse">
            <summary>
            Gets or sets the instance of command response.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.BeforeCommandEvent">
            <summary>
            Event published before command execution.
            </summary>
            <remarks>
            The command will not be executed if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.BeforeCommandEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Commands.ICommand)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.BeforeCommandEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="commandInstance">An instance of executed command.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.BeforeCommandEvent.CommandInstance">
            <summary>
            Gets the instance of executed command.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.CopyFileEvent">
            <summary>
            Event published before copying file in <c>CopyFiles</c> command.
            </summary>
            <remarks>
            The file will not be copied if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.CopyFileEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IFile,CKSource.CKFinder.Connector.Core.Nodes.IFile,CKSource.CKFinder.Connector.Core.Nodes.FileConflictOptions)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.CopyFileEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="sourceFile">A source file.</param>
            <param name="destinationFile">A destination file.</param>
            <param name="options">A file conflict options.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.CopyFileEvent.SourceFile">
            <summary>
            The source file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.CopyFileEvent.DestinationFile">
            <summary>
            The destination file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.CopyFileEvent.Options">
            <summary>
            The file conflict options.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.CreateFolderEvent">
            <summary>
            Event published before folder creation in <c>CreateFolder</c> command.
            </summary>
            <remarks>
            The folder will not be created if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.CreateFolderEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IFolder)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.CreateFolderEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="folder">A folder to create.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.CreateFolderEvent.Folder">
            <summary>
            The folder to create.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.DeleteFileEvent">
            <summary>
            Event published before deleting file in <c>DeleteFiles</c> command.
            </summary>
            <remarks>
            The file will not be deleted if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.DeleteFileEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IFile)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.DeleteFileEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="file">A file to delete.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.DeleteFileEvent.File">
            <summary>
            The file to delete.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.DeleteFolderEvent">
            <summary>
            Event published before deleting folder in <c>DeleteFolder</c> command.
            </summary>
            <remarks>
            The folder will not be deleted if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.DeleteFolderEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IFolder)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.DeleteFolderEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="folder">A folder to delete.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.DeleteFolderEvent.Folder">
            <summary>
            The folder to delete.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.DownloadFileEvent">
            <summary>
            Event published before file is served to the client in <c>DownloadFile</c> command.
            </summary>
            <remarks>
            The file content will not be transfered if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.DownloadFileEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IFile)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.DownloadFileEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="file">A file to transmit.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.DownloadFileEvent.File">
            <summary>
            The file to transmit.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.EventBase">
            <summary>
            Base event class.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.EventBase.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.EventBase"/>.
            </summary>
            <param name="commandRequest">A command request.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.EventBase.UserData">
            <summary>
            Gets or sets the user data object.
            </summary>
            <remarks>
            This object may contain any data and is passed between event handlers.
            </remarks>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.EventBase.CommandRequest">
            <summary>
            Gets the command request.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.FileUploadEvent">
            <summary>
            Event published before file is saved in the file system in <c>FileUpload</c> command.
            </summary>
            <remarks>
            The file will not be saved if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.FileUploadEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IFile,System.IO.Stream)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.FileUploadEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="file">A file to save.</param>
            <param name="stream">A stream with content.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.FileUploadEvent.File">
            <summary>
            The file to save.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.FileUploadEvent.Stream">
            <summary>
            The stream with content.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.MoveFileEvent">
            <summary>
            Event published before moving file in <c>MoveFiles</c> command.
            </summary>
            <remarks>
            The file will not be moved if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.MoveFileEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IFile,CKSource.CKFinder.Connector.Core.Nodes.IFile,CKSource.CKFinder.Connector.Core.Nodes.FileConflictOptions)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.MoveFileEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="sourceFile">A source file.</param>
            <param name="destinationFile">A destination file.</param>
            <param name="options">A file conflict options.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.MoveFileEvent.SourceFile">
            <summary>
            The source file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.MoveFileEvent.DestinationFile">
            <summary>
            The destination file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.MoveFileEvent.Options">
            <summary>
            The file conflict options.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.ProxyDownloadEvent">
            <summary>
            Event published before file is served to the client in <c>ProxyDownload</c> command.
            </summary>
            <remarks>
            The file content will not be transfered if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.ProxyDownloadEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IFile)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.ProxyDownloadEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="file">A file to transmit.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.ProxyDownloadEvent.File">
            <summary>
            The file to transmit.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.RenameFileEvent">
            <summary>
            Event published before renaming file in <c>RenameFile</c> command.
            </summary>
            <remarks>
            The file will not be renamed if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.RenameFileEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IFile,CKSource.CKFinder.Connector.Core.Nodes.IFile)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.RenameFileEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="sourceFile">A source file.</param>
            <param name="destinationFile">A destination file.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.RenameFileEvent.SourceFile">
            <summary>
            The source file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.RenameFileEvent.DestinationFile">
            <summary>
            The destination file.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.RenameFolderEvent">
            <summary>
            Event published before renaming folder in <c>RenameFolder</c> command.
            </summary>
            <remarks>
            The folder will not be renamed if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.RenameFolderEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IFolder,CKSource.CKFinder.Connector.Core.Nodes.IFolder)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.RenameFolderEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="sourceFolder">A source folder.</param>
            <param name="destinationFolder">A destination folder.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.RenameFolderEvent.SourceFolder">
            <summary>
            The source folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.RenameFolderEvent.DestinationFolder">
            <summary>
            The destination folder.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.Messages.ResizeImageEvent">
            <summary>
            Event published before generation of resized image in <c>ResizeImage</c> command.
            </summary>
            <remarks>
            The image will not be resized if event propagation has been stopped.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.Messages.ResizeImageEvent.#ctor(CKSource.CKFinder.Connector.Core.ICommandRequest,CKSource.CKFinder.Connector.Core.Nodes.IFile)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Events.Messages.ResizeImageEvent"/>.
            </summary>
            <param name="commandRequest">A command request object.</param>
            <param name="file">A file to resize.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Events.Messages.ResizeImageEvent.File">
            <summary>
            The file to resize.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.EventHandlerFunc`1">
            <summary>
            An event handler definition.
            </summary>
            <typeparam name="T">A type of the event.</typeparam>
            <param name="messageContext">An event message context.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Events.IEventAggregator">
            <summary>
            Event aggregator with sequential propagation.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.IEventAggregator.Subscribe``1(System.Func{CKSource.CKFinder.Connector.Core.Events.EventHandlerFunc{``0},CKSource.CKFinder.Connector.Core.Events.EventHandlerFunc{``0}})">
            <summary>
            Subscribes to event of given type.
            </summary>
            <remarks>
            All event handlers are executed sequentially in order of subscription:
            The first handler passed to Subscribe will be the outermost function, and the last handler passed to Subscribe will be the innermost.
            </remarks>
            <typeparam name="T">A type of the event.</typeparam>
            <param name="eventHandler">Function executed when event is published.</param>
            <returns>Subscription object.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.IEventAggregator.Unsubscribe(System.Object)">
            <summary>
            Unsubscribes event handler.
            </summary>
            <param name="eventHandler">Event handler to unsubscribe.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Events.IEventAggregator.PublishAsync``1(CKSource.CKFinder.Connector.Core.Events.MessageContext{``0})">
            <summary>
            Asynchronously publishes an event.
            </summary>
            <typeparam name="T">A type of the event.</typeparam>
            <param name="messageContext">An event message context.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.AccessDeniedException">
            <summary>
            Represents file system permission error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.AccessDeniedException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.AccessDeniedException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorDisabledException">
            <summary>
            Represents exception thrown when user is not allowed to use the connector.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorDisabledException.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorDisabledException"/>.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.CustomErrorException">
            <summary>
            Represents custom (user) error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.CustomErrorException.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.CustomErrorException"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.CustomErrorException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.CustomErrorException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.CustomErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.CustomErrorException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidConfigException">
            <summary>
            Represents invalid exception error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidConfigException.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidExtensionException"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidConfigException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidExtensionException"/>.
            </summary>
            <param name="message">A message that describes cause of this exception.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidConfigException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidExtensionException"/>.
            </summary>
            <param name="message">A message that describes cause of this exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.AlreadyExistsException">
            <summary>
            Represents file and/or folder conflict error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.AlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.AlreadyExistsException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.AlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.AlreadyExistsException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.CorruptedUploadException">
            <summary>
            Represents corrupted upload error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.CorruptedUploadException.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.CorruptedUploadException"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.CorruptedUploadException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.CorruptedUploadException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.CorruptedUploadException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.CorruptedUploadException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.FileNotFoundException">
            <summary>
            Represents file not found error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.FileNotFoundException.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.FileNotFoundException"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.FileNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.FileNotFoundException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.FileNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.FileNotFoundException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.FolderNotFoundException">
            <summary>
            Represents folder not found error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.FolderNotFoundException.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.FolderNotFoundException"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.FolderNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.FolderNotFoundException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.FolderNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.FolderNotFoundException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.UploadedInvalidException">
            <summary>
            Represents invalid file upload error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.UploadedInvalidException.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.UploadedInvalidException"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.UploadedInvalidException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.UploadedInvalidException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.UploadedInvalidException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.UploadedInvalidException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.WrongHtmlFileUploadException">
            <summary>
            Represents <c>HTML</c> file with not allowed extension upload error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.WrongHtmlFileUploadException.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.WrongHtmlFileUploadException"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.WrongHtmlFileUploadException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.WrongHtmlFileUploadException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.WrongHtmlFileUploadException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.WrongHtmlFileUploadException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidExtensionException">
            <summary>
            Represents invalid exception error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidExtensionException.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidExtensionException"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidExtensionException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidExtensionException"/>.
            </summary>
            <param name="invalidExtension">An extension that caused this exception.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidExtensionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidExtensionException"/>.
            </summary>
            <param name="invalidExtension">An extension that caused this exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException">
            <summary>
            Represents invalid name error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException"/>.
            </summary>
            <param name="invalidName">A name that caused this exception.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException"/>.
            </summary>
            <param name="invalidName">A name that caused this exception.</param>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException"/>.
            </summary>
            <param name="invalidName">A name that caused this exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException"/>.
            </summary>
            <param name="invalidName">A name that caused this exception.</param>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException.InvalidName">
            <summary>
            Gets the invalid name.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.UploadedTooBigException">
            <summary>
            Represents too big file upload error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.UploadedTooBigException.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.UploadedTooBigException"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.UploadedTooBigException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.UploadedTooBigException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.UploadedTooBigException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.UploadedTooBigException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.FileSystemExceptionExtensions">
            <summary>
            Extensions to backend for translation of exceptions.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.FileSystemExceptionExtensions.ToConnectorException(CKSource.FileSystem.Exceptions.FileSystemException)">
            <summary>
            Converts generic <see cref="T:CKSource.FileSystem.Exceptions.FileSystemException"/> to <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException"/>.
            </summary>
            <param name="fileSystemException">A file system exception.</param>
            <returns>A connector exception.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.FileSystemExceptionExtensions.ToConnectorException(CKSource.FileSystem.Exceptions.FileMissingException)">
            <summary>
            Converts <see cref="T:CKSource.FileSystem.Exceptions.FileMissingException"/> to <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException"/>.
            </summary>
            <param name="fileMissingException">A file missing exception.</param>
            <returns>A connector exception.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.FileSystemExceptionExtensions.ToConnectorException(CKSource.FileSystem.Exceptions.FolderMissingException)">
            <summary>
            Converts <see cref="T:CKSource.FileSystem.Exceptions.FolderMissingException"/> to <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException"/>.
            </summary>
            <param name="folderMissingException">A folder missing exception.</param>
            <returns>A connector exception.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.FileSystemExceptionExtensions.ToConnectorException(CKSource.FileSystem.Exceptions.PermissionDeniedException)">
            <summary>
            Converts <see cref="T:CKSource.FileSystem.Exceptions.PermissionDeniedException"/> to <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException"/>.
            </summary>
            <param name="permissionDeniedException">A permission denied exception.</param>
            <returns>A connector exception.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidRequestException">
            <summary>
            Represents invalid request error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidRequestException.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidRequestException"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidRequestException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidRequestException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidRequestException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidResourceException">
            <summary>
            Represents invalid ResourceType error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidResourceException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidResourceException"/>.
            </summary>
            <param name="resourceName">A name of invalid ResourceType.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.InvalidResourceException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidResourceException"/>.
            </summary>
            <param name="resourceName">A name of invalid ResourceType.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.PermissionRequiredException">
            <summary>
            Represents permission required error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.PermissionRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.PermissionRequiredException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.PermissionRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.PermissionRequiredException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.CommandNotFoundException">
            <summary>
            Represents command not found error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.CommandNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.CommandNotFoundException"/>.
            </summary>
            <param name="commandName">A command name that wasn't found.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.CommandNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.CommandNotFoundException"/>.
            </summary>
            <param name="commandName">A command name that wasn't found.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException">
            <summary>
            Represents base connector error.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException.#ctor(CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode,System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException"/>.
            </summary>
            <param name="errorCode">An error code.</param>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException.#ctor(CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode,System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException"/>.
            </summary>
            <param name="errorCode">An error code.</param>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException.#ctor(CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode,System.Net.HttpStatusCode,System.String)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException"/>.
            </summary>
            <param name="errorCode">An error code.</param>
            <param name="httpStatusCode">An <c>HTTP</c> status code.</param>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException.#ctor(CKSource.CKFinder.Connector.Core.Commands.Dtos.ErrorCode,System.Net.HttpStatusCode,System.String,System.Exception)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException"/>.
            </summary>
            <param name="errorCode">An error code.</param>
            <param name="httpStatusCode">An <c>HTTP</c> status code.</param>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException.ErrorCode">
            <summary>
            The error code.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Exceptions.ConnectorException.HttpStatusCode">
            <summary>
            The <c>HTTP</c> status code.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.FileSystems.IBackend">
            <summary>
            Represents a backend.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.FileSystems.IBackend.Name">
            <summary>
            Gets the name of the backend.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.FileSystems.IBackend.IsProxy">
            <summary>
            Gets whether this backend should generate <c>Proxy</c> command urls.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.FileSystems.IBackend.FileSystem">
            <summary>
            Gets the underlying file system instance.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.FileSystems.BackendRepository">
            <summary>
            Default implementation of <see cref="T:CKSource.CKFinder.Connector.Core.FileSystems.IBackendRepository"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.FileSystems.BackendRepository.#ctor(CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.FileSystems.BackendRepository"/>.
            </summary>
            <param name="resourceTypeRepository">A ResourceType repository.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.FileSystems.BackendRepository.Add(CKSource.CKFinder.Connector.Core.FileSystems.IBackend)">
            <summary>
            Adds backend to the repository.
            </summary>
            <param name="backend">A backend to add.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.FileSystems.BackendRepository.Remove(CKSource.CKFinder.Connector.Core.FileSystems.IBackend)">
            <summary>
            Removes backend from the repository.
            </summary>
            <remarks>
            A backend to remove can't be used by any <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> nor by any other connector subsystem.
            </remarks>
            <param name="backend">A backend to remove.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.FileSystems.BackendRepository.GetAll">
            <summary>
            Gets all registered backends.
            </summary>
            <returns>A collection of backends in the repository.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.FileSystems.BackendRepository.GetByName(System.String)">
            <summary>
            Gets backend by name.
            </summary>
            <param name="name">A backend name.</param>
            <returns>A matching backend or null if no backend with given name is registered in the repository.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.FileSystems.IBackendRepository">
            <summary>
            Represents a file system repository.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.FileSystems.IBackendRepository.Add(CKSource.CKFinder.Connector.Core.FileSystems.IBackend)">
            <summary>
            Adds file system to the repository.
            </summary>
            <param name="backend">A file system to add.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.FileSystems.IBackendRepository.Remove(CKSource.CKFinder.Connector.Core.FileSystems.IBackend)">
            <summary>
            Removes file system from the repository.
            </summary>
            <remarks>
            A file system to remove can't be used by any <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> nor by any other connector subsystem.
            </remarks>
            <param name="backend">A file system to remove.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.FileSystems.IBackendRepository.GetAll">
            <summary>
            Gets all registered file systems.
            </summary>
            <returns>A collection of file systems in the repository.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.FileSystems.IBackendRepository.GetByName(System.String)">
            <summary>
            Gets file system by name.
            </summary>
            <param name="name">A file system name.</param>
            <returns>A matching file system or null if no file system with given name is registered in the repository.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.HttpMethod">
            <summary>
            Valid http methods.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.HttpMethod.Get">
            <summary>
            A <c>GET</c> method.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.HttpMethod.Post">
            <summary>
            A <c>POST</c> method.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ICommandHandler">
            <summary>
            Handles command executions.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ICommandHandler.ExecuteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Invokes connector's command.
            </summary>
            <param name="commandName">A name of the command.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A command response.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ICommandHandlerProxy">
            <summary>
            A Proxy for handling command executions.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ICommandHandlerProxy.ExecuteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Invokes connector's command.
            </summary>
            <param name="commandName">A name of the command.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A command response.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ICommandRequest">
            <summary>
            A command request.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.Contents">
            <summary>
            Gets the read-only collection of contents.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.QueryParameters">
            <summary>
            Gets the read-only dictionary of query parameters.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.FormParameters">
            <summary>
            Gets the read-only dictionary of form parameters.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.Cookies">
            <summary>
            Gets the read-only dictionary of cookies.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.Headers">
            <summary>
            Gets the read-only dictionary of headers.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.Method">
            <summary>
            Gets the <c>HTTP</c> method for this request.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.Principal">
            <summary>
            Gets principal for this request.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.BaseUri">
            <summary>
            Gets the base uri of the connector.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.IsSecure">
            <summary>
            Gets whether this request is secure (https).
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.LocalIpAddress">
            <summary>
            Gets the local IP address.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.LocalPort">
            <summary>
            Gets the local port.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.RemoteIpAddress">
            <summary>
            Gets the remote IP address.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.RemotePort">
            <summary>
            Gets the remote port.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.Protocol">
            <summary>
            Gets the request protocol.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ICommandRequest.Scheme">
            <summary>
            Gets the HTTP request scheme.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.IComponentResolver">
            <summary>
            A component resolver.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.IComponentResolver.Resolve``1">
            <summary>
            Resolves component of given type.
            </summary>
            <typeparam name="T">A type of the component.</typeparam>
            <returns>An instance of the component.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ISecuritySettings">
            <summary>
            A security settings.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ISecuritySettings.EnableCsrfProtection">
            <summary>
            Gets whether <c>CSRF</c> protection should be enabled.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ISecuritySettings.EnableVerboseLogging">
            <summary>
            Gets whether all exceptions should include stacktrace.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Json.JsonExtensions">
            <summary>
            Extension class to simplify usage of Newtonsoft.Json
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Json.JsonExtensions.DefaultJsonSerializerSettings">
            <summary>
            The default serializer settings.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Json.JsonExtensions.ToJson``1(``0)">
            <summary>
            Serializes object to <c>JSON</c> string.
            </summary>
            <typeparam name="T">A type of object to serialize.</typeparam>
            <param name="obj">An object to serialize.</param>
            <returns>A <c>JSON</c> string representing serialized object.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Json.JsonExtensions.ToJson``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes object to <c>JSON</c> string.
            </summary>
            <typeparam name="T">A type of object to serialize.</typeparam>
            <param name="obj">An object to serialize.</param>
            <param name="jsonSerializerSettings">A custom serializer settings.</param>
            <returns>A <c>JSON</c> string representing serialized object.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Json.JsonExtensions.FromJson``1(System.String)">
            <summary>
            Deserializes <c>JSON</c> string to object.
            </summary>
            <typeparam name="T">A type of object to deserialize.</typeparam>
            <param name="text">A <c>JSON</c> string.</param>
            <returns>A deserialized object.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Json.JsonExtensions.FromJson``1(System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes <c>JSON</c> string to object.
            </summary>
            <typeparam name="T">A type of object to deserialize.</typeparam>
            <param name="text">A <c>JSON</c> string.</param>
            <param name="jsonSerializerSettings">A custom serializer settings.</param>
            <returns>A deserialized object.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Json.JsonExtensions.FromJson(System.String,System.Type)">
            <summary>
            Deserializes <c>JSON</c> string to object.
            </summary>
            <param name="type">A type of object to deserialize.</param>
            <param name="text">A <c>JSON</c> string.</param>
            <returns>A deserialized object.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Json.JsonExtensions.FromJson(System.String,System.Type,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes <c>JSON</c> string to object.
            </summary>
            <param name="type">A type of object to deserialize.</param>
            <param name="text">A <c>JSON</c> string.</param>
            <param name="jsonSerializerSettings">A custom serializer settings.</param>
            <returns>A deserialized object.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Json.JsonExtensions.FromJson``1(System.IO.Stream)">
            <summary>
            Deserializes stream containing <c>JSON</c> string to object.
            </summary>
            <typeparam name="T">A type of object to deserialize.</typeparam>
            <param name="stream">A stream containing <c>JSON</c> string.</param>
            <returns>A deserialized object.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Json.JsonExtensions.FromJson``1(System.IO.Stream,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes stream containing <c>JSON</c> string to object.
            </summary>
            <typeparam name="T">A type of object to deserialize.</typeparam>
            <param name="stream">A stream containing <c>JSON</c> string.</param>
            <param name="jsonSerializerSettings">A custom serializer settings.</param>
            <returns>A deserialized object.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.KeyValueStores.InMemoryKeyValueStoreProvider.OpenStoreAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously opens a key-value store.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A key-value store.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.KeyValueStores.KeyValueStoreSerialization">
            <summary>
            Default serialization settings for key-value stores.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.KeyValueStores.KeyValueStoreSerialization.JsonSerializerSettings">
            <summary>
            Default <c>JSON</c> settings.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.KeyValueStores.EmptyKeyValueStoreProvider">
            <summary>
            Dummy implementation of <see cref="T:CKSource.CKFinder.Connector.Core.KeyValueStores.IKeyValueStoreProvider"/>.
            </summary>
            <remarks>
            All operation on store created by this provider are a no-op.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.KeyValueStores.EmptyKeyValueStoreProvider.OpenStoreAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously opens a key-value store.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A key-value store.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.KeyValueStores.IKeyValueStore">
            <summary>
            A key-value store.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.KeyValueStores.IKeyValueStore.GetAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets a value.
            </summary>
            <typeparam name="T">A type of value to get.</typeparam>
            <param name="key">A key.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A value from store or null if key wasn't found.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.KeyValueStores.IKeyValueStore.SetAsync``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Asynchronously sets a value.
            </summary>
            <typeparam name="T">A type of value to set.</typeparam>
            <param name="key">A key.</param>
            <param name="value">A value to set.</param>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.KeyValueStores.IKeyValueStore.RemoveAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously removes value.
            </summary>
            <param name="key">A key.</param>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.KeyValueStores.IKeyValueStoreProvider">
            <summary>
            Represents a key-value store provider.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.KeyValueStores.IKeyValueStoreProvider.OpenStoreAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously opens a key-value store.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A key-value store.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Nodes.ImageFormats">
            <summary>
            Known image formats.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Nodes.ImageFormats.KnownExtensions">
            <summary>
            A list of known image extensions.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.ImageFormats.RegisterFormat``1">
            <summary>
            Registers a new image format.
            </summary>
            <typeparam name="T">A type of image format. Must implement <c>ISupportedImageFormat</c>.</typeparam>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.ImageFormats.RegisterFormat(System.Type)">
            <summary>
            Registers a new image format.
            </summary>
            <param name="type">A type of image format. Must implement <c>ISupportedImageFormat</c>.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.ImageFormats.GetFormatForFile(CKSource.CKFinder.Connector.Core.Nodes.IFile)">
            <summary>
            Gets format for a file.
            </summary>
            <param name="file">A file.</param>
            <returns>A <c>ISupportedImageFormat</c> instance or null if file extension in not in <see cref="F:CKSource.CKFinder.Connector.Core.Nodes.ImageFormats.KnownExtensions"/> list.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.ImageFormats.GetResizedFormatForFile(CKSource.CKFinder.Connector.Core.Nodes.IFile)">
            <summary>
            Gets format for a file after resize.
            </summary>
            <remarks>
            For <c>Bitmap</c> and unknown file formats returns an instance of <c>JpegFormat</c>.
            </remarks>
            <param name="file">A file.</param>
            <returns>A ISupportedImageFormat instance.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Nodes.INode">
            <summary>
            Defines basic file system node, which may be a file or a folder.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Nodes.FileConflictOptions">
            <summary>
            Possible file conflict options.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Nodes.FileConflictOptions.None">
            <summary>
            No action on file conflict.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Nodes.FileConflictOptions.Overwrite">
            <summary>
            Overwrite on conflict.
            </summary>
        </member>
        <member name="F:CKSource.CKFinder.Connector.Core.Nodes.FileConflictOptions.AutoRename">
            <summary>
            Change name on conflict.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Nodes.IFile">
            <summary>
            A <see cref="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.ResourceType"/> based file interface.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.Name">
            <summary>
            Gets the file name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.Extension">
            <summary>
            Gets the file extension.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.NameWithoutExtension">
            <summary>
            Gets the file name without the extension.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.Path">
            <summary>
            Gets <see cref="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.ResourceType"/> relative path to the file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.FullPath">
            <summary>
            Gets the absolute path to the file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.ResourceType">
            <summary>
            Gets the <see cref="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.ResourceType"/>.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.ParentFolder">
            <summary>
            Gets parent folder instance.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.AutoRenameAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously does automatic file rename, such that no file with the same name exists in the <see cref="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.ResourceType"/>.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A renamed file.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.CopyAsync(CKSource.CKFinder.Connector.Core.Nodes.IFile,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Asynchronously copies file.
            </summary>
            <param name="destinationFile">A destination file.</param>
            <param name="allowOverwrite">When true will try to overwrite existing files.</param>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.MoveAsync(CKSource.CKFinder.Connector.Core.Nodes.IFile,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Asynchronously moves file.
            </summary>
            <remarks>
            May be used for rename operation.
            </remarks>
            <param name="destinationFile">A destination file.</param>
            <param name="allowOverwrite">When true will try to overwrite existing files.</param>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronoulsy deletes file.
            </summary>
            <param name="cancellationToken">A cancellation token</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously checks if file exists.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>True if file exists, false otherwise.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads file content.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A stream with file content.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.WriteAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes file content.
            </summary>
            <param name="stream">A stream with file content.</param>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.GetFileInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets file information.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A FileInfo structure.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.GetUrlAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets file url.
            </summary>
            <remarks>
            If a file system should generate <c>Proxy</c> commands, a file url should be retreived with help of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.Proxy.IProxyUrlGenerator"/>.
            </remarks>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A file url.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.HasValidExtension">
            <summary>
            Checks if the extension is valid on the <see cref="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.ResourceType"/>.
            </summary>
            <returns>True if extension is valid, false otherwise.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.HasValidExtension(System.Boolean)">
            <summary>
            Checks if the extension is valid on the <see cref="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.ResourceType"/>.
            </summary>
            <param name="checkDoubleExtension">If true the method will split file name by dot character and check each part beside the first one against valid extensions list.</param>
            <returns>True if extension is valid, false otherwise.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.IsHidden">
            <summary>
            Checks if file is hidden on the <see cref="P:CKSource.CKFinder.Connector.Core.Nodes.IFile.ResourceType"/>.
            </summary>
            <returns>True if file is hidden, false otherwise.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFile.GetHashAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously calculates file hash.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A file hash.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Nodes.IFolder">
            <summary>
            A <see cref="P:CKSource.CKFinder.Connector.Core.Nodes.IFolder.ResourceType"/> based folder interface.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.IFolder.Name">
            <summary>
            Gets the folder name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.IFolder.Path">
            <summary>
            Gets <see cref="P:CKSource.CKFinder.Connector.Core.Nodes.IFolder.ResourceType"/> relative path to the folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.IFolder.FullPath">
            <summary>
            Gets the absolute path to the folder.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.IFolder.ResourceType">
            <summary>
            Gets the <see cref="P:CKSource.CKFinder.Connector.Core.Nodes.IFolder.ResourceType"/>.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.IFolder.ParentFolder">
            <summary>
            Gets parent folder instance.
            </summary>
            <remarks>
            May be null if this is the root folder.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFolder.CreateAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates folder.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFolder.MoveAsync(CKSource.CKFinder.Connector.Core.Nodes.IFolder,System.Threading.CancellationToken)">
            <summary>
            Asynchronously moves folder.
            </summary>
            <remarks>
            Folders can't be moved across resources.
            
            If destinationFolder ResourceType is different than this folder ResourceType a NotSupportedException will be thrown.
            
            A root folder (a one which Path is <c>/</c>) can't be moved.
            </remarks>
            <param name="destinationFolder">A destination folder.</param>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFolder.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously deletes folder.
            </summary>
            <remarks>
            <strong>This method will delete all folder's contents.</strong>
            </remarks>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFolder.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously checks if folder exists.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>True if folder exists, false otherwise.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFolder.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously lists folder contents.
            </summary>
            <param name="cancellationToken"></param>
            <returns>A collection of folder Nodes.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFolder.ListFoldersAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously lists folder contents.
            </summary>
            <param name="cancellationToken"></param>
            <returns>A collection of subfolders.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFolder.ListFilesAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously lists folder contents.
            </summary>
            <param name="cancellationToken"></param>
            <returns>A collection of files.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFolder.GetFolderInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets folder information structure.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A folder information structure.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFolder.HasSubfoldersAsync(CKSource.CKFinder.Connector.Core.Acl.IAclRepository,System.Collections.Generic.IReadOnlyCollection{System.String},System.Threading.CancellationToken)">
            <summary>
            Asynchronously determines whether the folder has any subfolders.
            </summary>
            <param name="aclRepository">A ACL repository.</param>
            <param name="userRoles">A collection of user roles.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>True if folder has subfolder, false otherwise.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFolder.GetUrlAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets folder url.
            </summary>
            <remarks>
            If a file system should generate <c>Proxy</c> commands, a folder url should be retreived with help of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.Proxy.IProxyUrlGenerator"/>.
            </remarks>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A folder url.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IFolder.IsHidden">
            <summary>
            Checks if folder is hidden on the <see cref="P:CKSource.CKFinder.Connector.Core.Nodes.IFolder.ResourceType"/>.
            </summary>
            <returns>True if folder is hidden, false otherwise.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Nodes.IImageFile">
            <summary>
            An image file interface.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IImageFile.GetImageSizeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets image dimensions.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An image size.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IImageFile.GetImageAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets image factory (from ImageProcessor library).
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An ImageFactory.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IImageFile.GetOrCreateResizedAsync(System.Drawing.Size,System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets or creates resized image.
            </summary>
            <param name="requestedSize">A new size.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A <see cref="T:CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile"/> instance.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IImageFile.GetResizedImagesAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets all existing resized images.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A collection of <see cref="T:CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile"/> instances.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Nodes.INodeFactory">
            <summary>
            A factory of files and folders.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.INodeFactory.CreateImageFile(CKSource.CKFinder.Connector.Core.Resources.ResourceType,System.String[])">
            <summary>
            Creates an image file.
            </summary>
            <param name="resourceType">A ResourceType.</param>
            <param name="pathParts">An array or list of path parts to the file. The last part is a file name.</param>
            <returns>An image file.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.INodeFactory.CreateImageFile(CKSource.CKFinder.Connector.Core.Nodes.IFolder,System.String)">
            <summary>
            Creates an image file.
            </summary>
            <param name="folder">A parent folder.</param>
            <param name="fileName">A file name.</param>
            <returns>An image file.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.INodeFactory.CreateFile(CKSource.CKFinder.Connector.Core.Resources.ResourceType,System.String[])">
            <summary>
            Creates a file.
            </summary>
            <param name="resourceType">A ResourceType.</param>
            <param name="pathParts">An array or list of path parts to the file. The last part is a file name.</param>
            <returns>A file.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.INodeFactory.CreateFile(CKSource.CKFinder.Connector.Core.Nodes.IFolder,System.String)">
            <summary>
            Creates a file.
            </summary>
            <param name="folder">A parent folder.</param>
            <param name="fileName">A file name.</param>
            <returns>A file.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.INodeFactory.CreateFolder(CKSource.CKFinder.Connector.Core.Resources.ResourceType,System.String[])">
            <summary>
            Creates a folder.
            </summary>
            <param name="resourceType">A ResourceType.</param>
            <param name="pathParts">An array or list of path parts to the folder. The last part is a folder name.</param>
            <returns>A folder.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.INodeFactory.CreateFolder(CKSource.CKFinder.Connector.Core.Nodes.IFolder,System.String)">
            <summary>
            Creates a folder.
            </summary>
            <param name="folder">A parent folder.</param>
            <param name="folderName">A folder name.</param>
            <returns>A folder.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Nodes.INodeValidator">
            <summary>
            A validator of Access Control List for files and folders.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.INodeValidator.ThrowIfReadDeniedAsync(CKSource.CKFinder.Connector.Core.Nodes.IFolder,System.Threading.CancellationToken)">
            <summary>
            Asynchronously checks read permissions for a folder and throws exception if read operation is not allowed.
            </summary>
            <remarks>
            Will throw <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.FolderNotFoundException"/> if read is not allowed.
            </remarks>
            <param name="folder">A folder to check.</param>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.INodeValidator.ThrowIfReadDeniedAsync(CKSource.CKFinder.Connector.Core.Nodes.IFile,System.Threading.CancellationToken)">
            <summary>
            Asynchronously checks read permissions for a file and throws exception if read operation is not allowed.
            </summary>
            <remarks>
            Will throw <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidExtensionException"/> if file contains not allowed extension.
            
            Will throw <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.FileNotFoundException"/> if read is not allowed.
            </remarks>
            <param name="file">A file to check.</param>
            <param name="cancellationToken">A cancellation token</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.INodeValidator.ThrowIfWriteDeniedAsync(CKSource.CKFinder.Connector.Core.Nodes.IFile,System.Threading.CancellationToken)">
            <summary>
            Asynchronously checks write permissions for a file and throws exception if write operation is not allowed.
            </summary>
            <remarks>
            Will throw <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidExtensionException"/> if file contains not allowed extension.
            
            Will throw <see cref="T:CKSource.CKFinder.Connector.Core.Exceptions.InvalidNameException"/> if file is hidden.
            </remarks>
            <param name="file">A file to check.</param>
            <param name="cancellationToken">A cancellation token</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Nodes.IThumbnailedFile">
            <summary>
            A file with thumbnail interface.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IThumbnailedFile.GetOrCreateThumbnailAsync(System.Drawing.Size,System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets or creates thumbnail image.
            </summary>
            <param name="requestedSize">A thumbnail size.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A <see cref="T:CKSource.CKFinder.Connector.Core.Nodes.ThumbnailFile"/> instance.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.IThumbnailedFile.GetThumbnailsAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets all existing thumbnails.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A collection of <see cref="T:CKSource.CKFinder.Connector.Core.Nodes.ThumbnailFile"/> instances.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile">
            <summary>
            A resized image file.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile.#ctor(CKSource.CKFinder.Connector.Core.Nodes.IImageFile,System.Drawing.Size)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile"/>.
            </summary>
            <param name="originalFile">An original image file.</param>
            <param name="size">A resized image size.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile.OriginalFile">
            <summary>
            Gets original image file.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile.Name">
            <summary>
            Gets resized image name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile.Size">
            <summary>
            Gets resized image size.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile.FullPath">
            <summary>
            Gets resized image absolute path.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads resized image content.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A stream with resized image data.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile.GetUrlAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets file url.
            </summary>
            <remarks>
            If a file system should generate <c>Proxy</c> commands, a file url should be retreived with help of <see cref="T:CKSource.CKFinder.Connector.Core.Commands.Proxy.IProxyUrlGenerator"/>.
            </remarks>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A file url.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.ResizedImageFile.GetFileInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets file information.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A FileInfo structure.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Nodes.ThumbnailFile">
            <summary>
            A thumbnail file.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.ThumbnailFile.#ctor(CKSource.FileSystem.IFileSystem,System.String,System.Drawing.Size)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Nodes.ThumbnailFile"/>.
            </summary>
            <param name="thumbnailFileSystem">A file system with thumbnails.</param>
            <param name="thumbnailPath">A path to thumbnail file.</param>
            <param name="size">A size of the thumbnail.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.ThumbnailFile.Name">
            <summary>
            Gets the thumbnail name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Nodes.ThumbnailFile.Size">
            <summary>
            Gets the thumbnail size.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.ThumbnailFile.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads thumbnail content.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A stream with thumbnail data.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Nodes.ThumbnailFile.GetFileSize(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets file size in bytes.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A file size.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Plugins.IPlugin">
            <summary>
            Defines plugin that extends connector's functionality.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Plugins.IPlugin.Initialize(CKSource.CKFinder.Connector.Core.IComponentResolver,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})">
            <summary>
            Initializes the plugin.
            </summary>
            <param name="componentResolver">The component resolver.</param>
            <param name="options">The dictionary of options for the plugin.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.RequestContent">
            <summary>
            Defines content stream for a request.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.RequestContent.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.RequestContent"/>.
            </summary>
            <param name="headers">A headers for the content.</param>
            <param name="stream">A content stream.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.RequestContent.Headers">
            <summary>
            Gets headers.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.RequestContent.Stream">
            <summary>
            Gets request stream.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.RequestContent.ExtractContentDisposition">
            <summary>
            Extracts content disposition header.
            </summary>
            <returns>The content disposition content.</returns>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.Threshold.Pixels">
            <summary>
            Gets or sets threshold pixels value.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.Threshold.Percent">
            <summary>
            Gets or sets threshold percent value.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ResizedImages.IImageMetadataCache">
            <summary>
            A cache with image metadata.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IImageMetadataCache.File">
            <summary>
            Get the image file for this cache.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.IImageMetadataCache.RemoveAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously removes cache data.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.IImageMetadataCache.GetSizeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets the image dimensions.
            </summary>
            <remarks>
            May be null if size is not yet in cache.
            </remarks>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An image dimensions.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.IImageMetadataCache.SetSizeAsync(System.Drawing.Size,System.Threading.CancellationToken)">
            <summary>
            Asynchronously sets the cached value of image dimensions.
            </summary>
            <param name="size">An image size.</param>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.IImageMetadataCache.GetHashAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets the image hash.
            </summary>
            <remarks>
            May be null if hash is not yet in cache.
            </remarks>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An image hash.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.IImageMetadataCache.SetHashAsync(System.UInt64,System.Threading.CancellationToken)">
            <summary>
            Asynchronously sets the cached value of image hash.
            </summary>
            <param name="hash">An image hash.</param>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ResizedImages.IImageMetadataCacheRepository">
            <summary>
            An image metadata cache repository.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.IImageMetadataCacheRepository.GetAndLockAsync(CKSource.CKFinder.Connector.Core.Nodes.IFile,System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets and locks image metadata cache for given file.
            </summary>
            <remarks>
            A cache is locked until <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.IImageMetadataCache"/> is disposed.
            </remarks>
            <param name="file">An image file.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>An <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.IImageMetadataCache"/> instance.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings">
            <summary>
            A file settings
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings.MaxFileSize">
            <summary>
            A maximum file size in bytes or null for no limit.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings.OverwriteOnUpload">
            <summary>
            True if upload should automatically overwrite existing files.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings.DisallowUnsafeCharacters">
            <summary>
            True if file and folder names should be disallowed to use certain characters.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings.CheckDoubleExtension">
            <summary>
            Whether to disallow files with double file extension.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings.SecureImageUploads">
            <summary>
            Whether to disallow invalid image files with image extensions.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IFileSettings.CacheControlSeconds">
            <summary>
            Configures cache lifetime for <c>Proxy</c> command.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ResizedImages.IImageSettings">
            <summary>
            An image settings.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IImageSettings.MaxSize">
            <summary>
            Gets or sets maximum image dimensions.
            </summary>
            <remarks>
            May be null for no limit.
            </remarks>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IImageSettings.Quality">
            <summary>
            Gets or sets the image quality.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IImageSettings.Sizes">
            <summary>
            Gets collection of known size definitions.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IImageSettings.CheckSizeAfterScaling">
            <summary>
            Whether a file size will be checked after image resize during <c>Upload</c> command execution.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IImageSettings.Threshold">
            <summary>
            The maximum difference in width and height between cached and requested resized image.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ResizedImages.IThumbnailSettings">
            <summary>
            A thumbnail settings.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IThumbnailSettings.Root">
            <summary>
            Gets the path to thumbnails in the backend.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IThumbnailSettings.Backend">
            <summary>
            Gets the backend.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.IThumbnailSettings.AllowedSizes">
            <summary>
            Gets the read-only collection of known sizes.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition">
            <summary>
            A size definition.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition.#ctor(System.String,System.Int32,System.Int32,CKSource.CKFinder.Connector.Core.ImageQuality)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition"/>.
            </summary>
            <param name="name">A name of the size.</param>
            <param name="width">A width in pixels.</param>
            <param name="height">A height in pixels.</param>
            <param name="quality">A quality.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition.Name">
            <summary>
            Gets the size name.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition"/> class and is equivalent to this <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition"/> class.
            </summary>
            <param name="obj">The object to test.</param>
            <returns>true if obj is a <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition"/> class equivalent to this <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition"/> class; otherwise, false.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition"/> class.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition.Equals(CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition)">
            <summary>
            Tests whether the specified <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition"/> class is equivalent to this <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition"/> class.
            </summary>
            <param name="other">The <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition"/> object to test.</param>
            <returns>true if other is equivalent to this <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeDefinition"/> class; otherwise, false.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality">
            <summary>
            A size and quality.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality.#ctor(System.Int32,System.Int32,CKSource.CKFinder.Connector.Core.ImageQuality)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality"/>.
            </summary>
            <param name="width">A width in pixels.</param>
            <param name="height">A height in pixels.</param>
            <param name="quality">A quality.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality.#ctor(System.Drawing.Size,CKSource.CKFinder.Connector.Core.ImageQuality)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality"/>.
            </summary>
            <param name="size">A size.</param>
            <param name="quality">A quality.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality.Size">
            <summary>
            Gets the size.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality.Quality">
            <summary>
            Gets the quality.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality.Width">
            <summary>
            Gets the width in pixels.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality.Height">
            <summary>
            Gets the height in pixels.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality"/> class and is equivalent to this <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality"/> class.
            </summary>
            <param name="obj">The object to test.</param>
            <returns>true if obj is a <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality"/> class equivalent to this <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality"/> class; otherwise, false.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality"/> class.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality"/>.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality.Equals(CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality)">
            <summary>
            Tests whether the specified <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality"/> class is equivalent to this <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality"/> class.
            </summary>
            <param name="other">The <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality"/> object to test.</param>
            <returns>true if other is equivalent to this <see cref="T:CKSource.CKFinder.Connector.Core.ResizedImages.SizeAndQuality"/> class; otherwise, false.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.IDtoMapper">
            <summary>
            Defines a data transfer object mapper.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.IDtoMapper.MapToResourceDtoAsync(CKSource.CKFinder.Connector.Core.Resources.ResourceType,System.Threading.CancellationToken)">
            <summary>
            Asynchronously maps ResourceType.
            </summary>
            <param name="resourceType">A ResourceType to map.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A mapped ResourceType.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.IDtoMapper.MapToResourceDtoAsync(System.Collections.Generic.IEnumerable{CKSource.CKFinder.Connector.Core.Resources.ResourceType},System.Threading.CancellationToken)">
            <summary>
            Asynchronously maps collection of resources.
            </summary>
            <param name="resources">A collection of resources to map.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A mapped resources.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.IDtoMapper.MapToFolderDtoAsync(CKSource.CKFinder.Connector.Core.Nodes.IFolder,System.Threading.CancellationToken)">
            <summary>
            Asynchronously maps folder.
            </summary>
            <param name="folder">A folder to map.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A mapped folder.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.IDtoMapper.MapToFolderDtoAsync(System.Collections.Generic.IEnumerable{CKSource.CKFinder.Connector.Core.Nodes.IFolder},System.Threading.CancellationToken)">
            <summary>
            Asynchronously maps collection of folders.
            </summary>
            <param name="folders">A collection of folders to map.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A mapped folders.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.IDtoMapper.MapToFileInfoDtoAsync(CKSource.FileSystem.FileInfo,System.Threading.CancellationToken)">
            <summary>
            Asynchronously maps file information.
            </summary>
            <param name="fileInfo">A file information to map.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A mapped file information.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.IDtoMapper.MapToFileInfoDtoAsync(System.Collections.Generic.IEnumerable{CKSource.FileSystem.FileInfo},System.Threading.CancellationToken)">
            <summary>
            Asynchronously maps collection of file informations.
            </summary>
            <param name="fileInfos">A collection of file informations to map.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A mapped file informations.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.IDtoMapper.MapToCurrentDirectoryDtoAsync(CKSource.CKFinder.Connector.Core.Nodes.IFolder,System.Threading.CancellationToken)">
            <summary>
            Asynchronously maps folder.
            </summary>
            <param name="folder">A folder to map.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A mapped folder.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.IConnector">
            <summary>
            Describes a connector.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.IConnector.ComponentResolver">
            <summary>
            Gets the component resolver.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.IConnector.ConfigurationAction">
            <summary>
            Gets action for configuration of the connector.
            </summary>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.ImageQuality">
            <summary>
            Describes an image quality.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ImageQuality.#ctor(System.Int32)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.ImageQuality"/>.
            </summary>
            <param name="qualityValue">An image quality in range from 1 to 100.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.ImageQuality.QualityValue">
            <summary>
            Gets the quality value.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ImageQuality.op_Implicit(CKSource.CKFinder.Connector.Core.ImageQuality)~System.Int32">
            <summary>
            Conversion to integer.
            </summary>
            <param name="imageQuality">The image quality object.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.ImageQuality.op_Explicit(System.Int32)~CKSource.CKFinder.Connector.Core.ImageQuality">
            <summary>
            Conversion from integer.
            </summary>
            <param name="qualityValue">An image quality in range from 1 to 100.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Logs.EmptyLoggerAdapterFactory">
            <summary>
            Dummy implementation of <see cref="T:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapterFactory"/>.
            </summary>
            <remarks>
            Logger adapters returned by this factory do nothing. All their operations are a no-op.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.EmptyLoggerAdapterFactory.GetLogger(System.String)">
            <summary>
            Gets logger with given name.
            </summary>
            <param name="loggerName">A name of a logger.</param>
            <returns>A logger instance.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter">
            <summary>
            Represents a logger adapter.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter.Debug(System.String)">
            <summary>
            Passes message to the logger with debug level.
            </summary>
            <param name="message">A message to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter.Debug(System.String,System.Exception)">
            <summary>
            Passes message and exception information to the logger with debug level.
            </summary>
            <param name="message">A message to log.</param>
            <param name="exception">An exception to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter.Info(System.String)">
            <summary>
            Passes message to the logger with informational level.
            </summary>
            <param name="message">A message to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter.Info(System.String,System.Exception)">
            <summary>
            Passes message and exception information to the logger with informational level.
            </summary>
            <param name="message">A message to log.</param>
            <param name="exception">An exception to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter.Warning(System.String)">
            <summary>
            Passes message to the logger with warning level.
            </summary>
            <param name="message">A message to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter.Warning(System.String,System.Exception)">
            <summary>
            Passes message and exception information to the logger with warning level.
            </summary>
            <param name="message">A message to log.</param>
            <param name="exception">An exception to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter.Error(System.String)">
            <summary>
            Passes message to the logger with error level.
            </summary>
            <param name="message">A message to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter.Error(System.String,System.Exception)">
            <summary>
            Passes message and exception information to the logger with error level.
            </summary>
            <param name="message">A message to log.</param>
            <param name="exception">An exception to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter.Fatal(System.String)">
            <summary>
            Passes message to the logger with fatal level.
            </summary>
            <param name="message">A message to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter.Fatal(System.String,System.Exception)">
            <summary>
            Passes message and exception information to the logger with fatal level.
            </summary>
            <param name="message">A message to log.</param>
            <param name="exception">An exception to log.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapterFactory">
            <summary>
            A factory of logger adapters.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapterFactory.GetLogger(System.String)">
            <summary>
            Gets logger with given name.
            </summary>
            <param name="loggerName">A name of a logger.</param>
            <returns>A logger instance.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Logs.Logger">
            <summary>
            Represents the logger.
            </summary>
            <remarks>
            All loggers are using <see cref="T:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter"/>. To use desired <see cref="T:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter"/> type register
            <see cref="T:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapterFactory"/> in <see cref="T:CKSource.CKFinder.Connector.Core.Logs.LoggerManager"/>.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.#ctor(CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapter)">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Logs.Logger"/>.
            </summary>
            <param name="loggerAdapter">A logger adapter.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Debug``1(``0)">
            <summary>
            Logs message with debug level.
            </summary>
            <typeparam name="T">A type of object to log.</typeparam>
            <param name="value">An object to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Debug(System.String,System.Object[])">
            <summary>
            Logs message with debug level.
            </summary>
            <param name="format">A message format.</param>
            <param name="args">Format arguments.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Debug(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs message with debug level.
            </summary>
            <param name="provider">A format provider.</param>
            <param name="format">A message format.</param>
            <param name="args">Format arguments.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Debug(System.String,System.Exception)">
            <summary>
            Logs message with debug level.
            </summary>
            <param name="message">A message to log.</param>
            <param name="exception">An exception to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Info``1(``0)">
            <summary>
            Logs message with informational level.
            </summary>
            <typeparam name="T">A type of object to log.</typeparam>
            <param name="value">An object to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Info(System.String,System.Object[])">
            <summary>
            Logs message with informational level.
            </summary>
            <param name="format">A message format.</param>
            <param name="args">Format arguments.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Info(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs message with informational level.
            </summary>
            <param name="provider">A format provider.</param>
            <param name="format">A message format.</param>
            <param name="args">Format arguments.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Info(System.String,System.Exception)">
            <summary>
            Logs message with informational level.
            </summary>
            <param name="message">A message to log.</param>
            <param name="exception">An exception to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Warning``1(``0)">
            <summary>
            Logs message with warning level.
            </summary>
            <typeparam name="T">A type of object to log.</typeparam>
            <param name="value">An object to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Warning(System.String,System.Object[])">
            <summary>
            Logs message with warning level.
            </summary>
            <param name="format">A message format.</param>
            <param name="args">Format arguments.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Warning(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs message with warning level.
            </summary>
            <param name="provider">A format provider.</param>
            <param name="format">A message format.</param>
            <param name="args">Format arguments.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Warning(System.String,System.Exception)">
            <summary>
            Logs message with warning level.
            </summary>
            <param name="message">A message to log.</param>
            <param name="exception">An exception to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Error``1(``0)">
            <summary>
            Logs message with error level.
            </summary>
            <typeparam name="T">A type of object to log.</typeparam>
            <param name="value">An object to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Error(System.String,System.Object[])">
            <summary>
            Logs message with error level.
            </summary>
            <param name="format">A message format.</param>
            <param name="args">Format arguments.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Error(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs message with error level.
            </summary>
            <param name="provider">A format provider.</param>
            <param name="format">A message format.</param>
            <param name="args">Format arguments.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Error(System.String,System.Exception)">
            <summary>
            Logs message with error level.
            </summary>
            <param name="message">A message to log.</param>
            <param name="exception">An exception to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Fatal``1(``0)">
            <summary>
            Logs message with fatal level.
            </summary>
            <typeparam name="T">A type of object to log.</typeparam>
            <param name="value">An object to log.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Fatal(System.String,System.Object[])">
            <summary>
            Logs message with fatal level.
            </summary>
            <param name="format">A message format.</param>
            <param name="args">Format arguments.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Fatal(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs message with fatal level.
            </summary>
            <param name="provider">A format provider.</param>
            <param name="format">A message format.</param>
            <param name="args">Format arguments.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.Logger.Fatal(System.String,System.Exception)">
            <summary>
            Logs message with fatal level.
            </summary>
            <param name="message">A message to log.</param>
            <param name="exception">An exception to log.</param>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Logs.LoggerManager">
            <summary>
            A static logger manager.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Logs.LoggerManager.LoggerAdapterFactory">
            <summary>
            Gets or sets <see cref="T:CKSource.CKFinder.Connector.Core.Logs.ILoggerAdapterFactory"/> implementation to use by the manager.
            </summary>
            <remarks>
            This should be set only once at application start-up, before any other connector related code is invoked.
            Otherwise some messages might be lost.
            </remarks>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.LoggerManager.GetLoggerForCurrentClass">
            <summary>
            Gets a logger with current class name.
            </summary>
            <returns>A logger for current class.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.LoggerManager.GetLogger(System.Type)">
            <summary>
            Get logger for given type.
            </summary>
            <param name="type">A type for which logger will be returned.</param>
            <returns>A logger instance with name equal to given type's name.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Logs.LoggerManager.GetLogger(System.String)">
            <summary>
            Gets logger with given name.
            </summary>
            <param name="loggerName">A logger name.</param>
            <returns>A logger instance.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository">
            <summary>
            A <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> repository.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository.Add(CKSource.CKFinder.Connector.Core.Resources.ResourceType)">
            <summary>
            Adds a <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> to the repository.
            </summary>
            <remarks>
            All resource types must have unique names.
            </remarks>
            <param name="resourceType">A <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> to add.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository.Remove(CKSource.CKFinder.Connector.Core.Resources.ResourceType)">
            <summary>
            Removes a <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> from the repository.
            </summary>
            <param name="resourceType">A <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> to remove.</param>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository.GetAllUnsafe">
            <summary>
            Gets all registered <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> instances without making sure that they are valid.
            </summary>
            <seealso cref="M:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository.GetAll"/>
            <seealso cref="M:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository.GetAllAsync(System.Threading.CancellationToken)"/>
            <returns>A collection of <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> instances.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository.GetAll">
            <summary>
            Gets all registered <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> instances.
            </summary>
            <returns>A collection of <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> instances.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository.GetByName(System.String)">
            <summary>
            Gets a <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> by it's name.
            </summary>
            <param name="resourceTypeName">A <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> name.</param>
            <returns>A <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> instance or null if not found in the repository.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets all registered <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> instances and makes sure that they are valid.
            </summary>
            <seealso cref="M:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository.GetAll"/>
            <seealso cref="M:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository.GetAllUnsafe"/>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A collection of <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> instances.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository.GetByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets a <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> by it's name and makes sure it is valid.
            </summary>
            <seealso cref="M:CKSource.CKFinder.Connector.Core.Resources.IResourceTypeRepository.GetByName(System.String)"/>
            <param name="resourceTypeName">A <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> name.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> instance or null if not found in the repository.</returns>
        </member>
        <member name="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType">
            <summary>
            Defines a <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/>.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Resources.ResourceType.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean,CKSource.CKFinder.Connector.Core.FileSystems.IBackend,System.Collections.Generic.IEnumerable{CKSource.CKFinder.Connector.Core.Acl.StringMatcher},System.Collections.Generic.IEnumerable{CKSource.CKFinder.Connector.Core.Acl.StringMatcher},System.Collections.Generic.IEnumerable{CKSource.CKFinder.Connector.Core.Acl.StringMatcher},System.Nullable{System.Int64})">
            <summary>
            Constructs a new instance of <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/>.
            </summary>
            <param name="name">A <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> name.</param>
            <param name="label">A label.</param>
            <param name="root">A base path of the <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> in the backend.</param>
            <param name="allowedExtensions">A collection of allowed extensions.</param>
            <param name="deniedExtensions">A collection of disallowed extensions.</param>
            <param name="isLazyLoaded">Whether a <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> is lazy loaded.</param>
            <param name="backend">A <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> backend.</param>
            <param name="hideFilesMatchers">A collection of matchers to hide files.</param>
            <param name="hideFoldersMatchers">A collection of matchers to hide folders.</param>
            <param name="allowedHtmlExtensionMatchers">A collection of matchers with allowed <c>HTML</c> extensions.</param>
            <param name="maxFileSize">A maximum allowed file size in bytes or null for no limit.</param>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Resources.ResourceType.Name">
            <summary>
            Gets the <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> name.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Resources.ResourceType.Root">
            <summary>
            Gets the base path of the <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> in the file system.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Resources.ResourceType.MaxFileSize">
            <summary>
            Gets the maximum allowed file size in bytes or null for no limit.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Resources.ResourceType.AllowedExtensions">
            <summary>
            Gets the array of allowed extensions.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Resources.ResourceType.DeniedExtensions">
            <summary>
            Gets the array of disallowed extensions.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Resources.ResourceType.Label">
            <summary>
            Gets the label. May be null if label is not defined.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Resources.ResourceType.IsLazyLoaded">
            <summary>
            Gets whether the <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> is lazy loaded.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Resources.ResourceType.Backend">
            <summary>
            Gets the backend.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Resources.ResourceType.HideFilesMatchers">
            <summary>
            Gets the array of matchers to hide files.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Resources.ResourceType.HideFoldersMatchers">
            <summary>
            Gets the array of matchers to hide folders.
            </summary>
        </member>
        <member name="P:CKSource.CKFinder.Connector.Core.Resources.ResourceType.AllowedHtmlExtensionMatchers">
            <summary>
            Gets the array of matchers with allowed <c>HTML</c> extensions.
            </summary>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Resources.ResourceType.ToString">
            <summary>
            Returns a string that represents the ResourceType.
            </summary>
            <returns>A <see cref="T:CKSource.CKFinder.Connector.Core.Resources.ResourceType"/> name.</returns>
        </member>
        <member name="M:CKSource.CKFinder.Connector.Core.Resources.ResourceType.EnsureIsValidAsync(CKSource.CKFinder.Connector.Core.Nodes.INodeFactory,System.Threading.CancellationToken)">
            <summary>
            Makes sure backend folder structure exists.
            </summary>
            <param name="nodeFactory">A node factory.</param>
            <param name="cancellationToken">A cancellation token.</param>
        </member>
    </members>
</doc>
