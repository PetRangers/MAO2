@model CaptainMao.Areas.Admin.Models.SetAuthViewModel

<h2>設定權限</h2>

<div class="container-fluid">
    <div class="col-sm-12">

        @using (Html.BeginForm())
        {
            <div class="form-horizontal">
                <h4>SetAuthViewModel</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.UserName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">權限</label>
                    <div class="col-md-10">
                            <label class="btn btn-warning" for="IsAdmin">
                                @Html.DisplayNameFor(model => model.IsAdmin): @Html.EditorFor(model => model.IsAdmin, new { htmlAttributes = new { @class = "form-control" } })
                            </label>
                            <label class="btn btn-info" for="IsMaster">
                                @Html.DisplayNameFor(model => model.IsMaster): @Html.EditorFor(model => model.IsMaster, new { htmlAttributes = new { @class = "form-control" } })
                            </label>
                            <label class="btn btn-success" for="IsStore">
                                @Html.DisplayNameFor(model => model.IsStore): @Html.EditorFor(model => model.IsStore, new { htmlAttributes = new { @class = "form-control" } })
                            </label>
                            <label class="btn btn-primary" for="IsNormal">
                                @Html.DisplayNameFor(model => model.IsNormal): @Html.EditorFor(model => model.IsNormal, new { htmlAttributes = new { @class = "form-control" } })
                            </label>
                            <label class="btn btn-danger" for="IsInactivated">
                                @Html.DisplayNameFor(model => model.IsInactivated): @Html.EditorFor(model => model.IsInactivated, new { htmlAttributes = new { @class = "form-control" } })
                            </label>
                        
                    </div>
                </div>
                
                <div class="form-group">
                    <label class="control-label col-md-2">管理討論區</label>
                    <div class="col-md-10">
                        <label class="btn btn-default" for="IsBoardDogMaster">
                            @Html.DisplayNameFor(model => model.IsBoardDogMaster): @Html.EditorFor(model => model.IsBoardDogMaster, new { htmlAttributes = new { @class = "form-control" } })
                        </label>
                        <label class="btn btn-default" for="IsBoardCatMaster">
                            @Html.DisplayNameFor(model => model.IsBoardCatMaster): @Html.EditorFor(model => model.IsBoardCatMaster, new { htmlAttributes = new { @class = "form-control" } })
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn btn-info" type="submit">修改</button> <button class="btn btn-default" type="reset">重設</button>
                    </div>
                </div>
            </div>
        }

        <div class="col-sm-offset-2 col-sm-10">
            @Html.ActionLink("返回列表","SetAuth", "SetAuth", new { area = "Admin" }, new { @class = "btn btn-default" })
        </div>

    </div>
</div>
